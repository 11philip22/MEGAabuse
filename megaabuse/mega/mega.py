# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _mega
else:
    import _mega

<<<<<<< HEAD
import builtins as __builtin__

=======
try:
    import builtins as __builtin__
except ImportError:
    import __builtin__
>>>>>>> origin/pythonSDK

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class MegaGfxProcessor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def readBitmap(self, path):
        return _mega.MegaGfxProcessor_readBitmap(self, path)

    def getWidth(self):
        return _mega.MegaGfxProcessor_getWidth(self)

    def getHeight(self):
        return _mega.MegaGfxProcessor_getHeight(self)

    def getBitmapDataSize(self, width, height, px, py, rw, rh):
        return _mega.MegaGfxProcessor_getBitmapDataSize(self, width, height, px, py, rw, rh)

    def getBitmapData(self, bitmapData, size):
        return _mega.MegaGfxProcessor_getBitmapData(self, bitmapData, size)

    def freeBitmap(self):
        return _mega.MegaGfxProcessor_freeBitmap(self)
    __swig_destroy__ = _mega.delete_MegaGfxProcessor

    def __init__(self):
        if self.__class__ == MegaGfxProcessor:
            _self = None
        else:
            _self = self
        _mega.MegaGfxProcessor_swiginit(self, _mega.new_MegaGfxProcessor(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaGfxProcessor(self)
        return weakref.proxy(self)

# Register MegaGfxProcessor in _mega:
_mega.MegaGfxProcessor_swigregister(MegaGfxProcessor)
cvar = _mega.cvar
MEGA_DEBRIS_FOLDER = cvar.MEGA_DEBRIS_FOLDER
INVALID_HANDLE = cvar.INVALID_HANDLE

class MegaProxy(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PROXY_NONE = _mega.MegaProxy_PROXY_NONE
    PROXY_AUTO = _mega.MegaProxy_PROXY_AUTO
    PROXY_CUSTOM = _mega.MegaProxy_PROXY_CUSTOM

    def __init__(self):
        _mega.MegaProxy_swiginit(self, _mega.new_MegaProxy())
    __swig_destroy__ = _mega.delete_MegaProxy

    def setProxyType(self, proxyType):
        return _mega.MegaProxy_setProxyType(self, proxyType)

    def setProxyURL(self, proxyURL):
        return _mega.MegaProxy_setProxyURL(self, proxyURL)

    def setCredentials(self, username, password):
        return _mega.MegaProxy_setCredentials(self, username, password)

    def getProxyType(self):
        return _mega.MegaProxy_getProxyType(self)

    def getProxyURL(self):
        return _mega.MegaProxy_getProxyURL(self)

    def credentialsNeeded(self):
        return _mega.MegaProxy_credentialsNeeded(self)

    def getUsername(self):
        return _mega.MegaProxy_getUsername(self)

    def getPassword(self):
        return _mega.MegaProxy_getPassword(self)

# Register MegaProxy in _mega:
_mega.MegaProxy_swigregister(MegaProxy)

class MegaLogger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def log(self, time, loglevel, source, message):
        return _mega.MegaLogger_log(self, time, loglevel, source, message)
    __swig_destroy__ = _mega.delete_MegaLogger

    def __init__(self):
        if self.__class__ == MegaLogger:
            _self = None
        else:
            _self = self
        _mega.MegaLogger_swiginit(self, _mega.new_MegaLogger(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaLogger(self)
        return weakref.proxy(self)

# Register MegaLogger in _mega:
_mega.MegaLogger_swigregister(MegaLogger)

class MegaNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TYPE_UNKNOWN = _mega.MegaNode_TYPE_UNKNOWN
    TYPE_FILE = _mega.MegaNode_TYPE_FILE
    TYPE_FOLDER = _mega.MegaNode_TYPE_FOLDER
    TYPE_ROOT = _mega.MegaNode_TYPE_ROOT
    TYPE_INCOMING = _mega.MegaNode_TYPE_INCOMING
    TYPE_RUBBISH = _mega.MegaNode_TYPE_RUBBISH
    NODE_LBL_UNKNOWN = _mega.MegaNode_NODE_LBL_UNKNOWN
    NODE_LBL_RED = _mega.MegaNode_NODE_LBL_RED
    NODE_LBL_ORANGE = _mega.MegaNode_NODE_LBL_ORANGE
    NODE_LBL_YELLOW = _mega.MegaNode_NODE_LBL_YELLOW
    NODE_LBL_GREEN = _mega.MegaNode_NODE_LBL_GREEN
    NODE_LBL_BLUE = _mega.MegaNode_NODE_LBL_BLUE
    NODE_LBL_PURPLE = _mega.MegaNode_NODE_LBL_PURPLE
    NODE_LBL_GREY = _mega.MegaNode_NODE_LBL_GREY
    CHANGE_TYPE_REMOVED = _mega.MegaNode_CHANGE_TYPE_REMOVED
    CHANGE_TYPE_ATTRIBUTES = _mega.MegaNode_CHANGE_TYPE_ATTRIBUTES
    CHANGE_TYPE_OWNER = _mega.MegaNode_CHANGE_TYPE_OWNER
    CHANGE_TYPE_TIMESTAMP = _mega.MegaNode_CHANGE_TYPE_TIMESTAMP
    CHANGE_TYPE_FILE_ATTRIBUTES = _mega.MegaNode_CHANGE_TYPE_FILE_ATTRIBUTES
    CHANGE_TYPE_INSHARE = _mega.MegaNode_CHANGE_TYPE_INSHARE
    CHANGE_TYPE_OUTSHARE = _mega.MegaNode_CHANGE_TYPE_OUTSHARE
    CHANGE_TYPE_PARENT = _mega.MegaNode_CHANGE_TYPE_PARENT
    CHANGE_TYPE_PENDINGSHARE = _mega.MegaNode_CHANGE_TYPE_PENDINGSHARE
    CHANGE_TYPE_PUBLIC_LINK = _mega.MegaNode_CHANGE_TYPE_PUBLIC_LINK
    CHANGE_TYPE_NEW = _mega.MegaNode_CHANGE_TYPE_NEW
    INVALID_DURATION = _mega.MegaNode_INVALID_DURATION
    __swig_destroy__ = _mega.delete_MegaNode

    def copy(self):
        return _mega.MegaNode_copy(self)

    def getType(self):
        return _mega.MegaNode_getType(self)

    def getName(self):
        return _mega.MegaNode_getName(self)

    def getFingerprint(self):
        return _mega.MegaNode_getFingerprint(self)

    def getOriginalFingerprint(self):
        return _mega.MegaNode_getOriginalFingerprint(self)

    def hasCustomAttrs(self):
        return _mega.MegaNode_hasCustomAttrs(self)

    def getCustomAttrNames(self):
        return _mega.MegaNode_getCustomAttrNames(self)

    def getCustomAttr(self, attrName):
        return _mega.MegaNode_getCustomAttr(self, attrName)

    def getDuration(self):
        return _mega.MegaNode_getDuration(self)

    def getWidth(self):
        return _mega.MegaNode_getWidth(self)

    def getHeight(self):
        return _mega.MegaNode_getHeight(self)

    def getShortformat(self):
        return _mega.MegaNode_getShortformat(self)

    def getVideocodecid(self):
        return _mega.MegaNode_getVideocodecid(self)

    def isFavourite(self):
        return _mega.MegaNode_isFavourite(self)

    def getLabel(self):
        return _mega.MegaNode_getLabel(self)

    def getLatitude(self):
        return _mega.MegaNode_getLatitude(self)

    def getLongitude(self):
        return _mega.MegaNode_getLongitude(self)

    def getBase64Handle(self):
        return _mega.MegaNode_getBase64Handle(self)

    def getSize(self):
        return _mega.MegaNode_getSize(self)

    def getCreationTime(self):
        return _mega.MegaNode_getCreationTime(self)

    def getModificationTime(self):
        return _mega.MegaNode_getModificationTime(self)

    def getHandle(self):
        return _mega.MegaNode_getHandle(self)

    def getRestoreHandle(self):
        return _mega.MegaNode_getRestoreHandle(self)

    def getParentHandle(self):
        return _mega.MegaNode_getParentHandle(self)

    def getBase64Key(self):
        return _mega.MegaNode_getBase64Key(self)

    def getTag(self):
        return _mega.MegaNode_getTag(self)

    def getExpirationTime(self):
        return _mega.MegaNode_getExpirationTime(self)

    def getPublicHandle(self):
        return _mega.MegaNode_getPublicHandle(self)

    def getPublicNode(self):
        return _mega.MegaNode_getPublicNode(self)

    def getPublicLink(self, includeKey=True):
        return _mega.MegaNode_getPublicLink(self, includeKey)

    def getPublicLinkCreationTime(self):
        return _mega.MegaNode_getPublicLinkCreationTime(self)

    def getWritableLinkAuthKey(self):
        return _mega.MegaNode_getWritableLinkAuthKey(self)

    def isFile(self):
        return _mega.MegaNode_isFile(self)

    def isFolder(self):
        return _mega.MegaNode_isFolder(self)

    def isRemoved(self):
        return _mega.MegaNode_isRemoved(self)

    def hasChanged(self, changeType):
        return _mega.MegaNode_hasChanged(self, changeType)

    def getChanges(self):
        return _mega.MegaNode_getChanges(self)

    def hasThumbnail(self):
        return _mega.MegaNode_hasThumbnail(self)

    def hasPreview(self):
        return _mega.MegaNode_hasPreview(self)

    def isPublic(self):
        return _mega.MegaNode_isPublic(self)

    def isShared(self):
        return _mega.MegaNode_isShared(self)

    def isOutShare(self):
        return _mega.MegaNode_isOutShare(self)

    def isInShare(self):
        return _mega.MegaNode_isInShare(self)

    def isExported(self):
        return _mega.MegaNode_isExported(self)

    def isExpired(self):
        return _mega.MegaNode_isExpired(self)

    def isTakenDown(self):
        return _mega.MegaNode_isTakenDown(self)

    def isForeign(self):
        return _mega.MegaNode_isForeign(self)

    def getFileAttrString(self):
        return _mega.MegaNode_getFileAttrString(self)

    def setPrivateAuth(self, privateAuth):
        return _mega.MegaNode_setPrivateAuth(self, privateAuth)

    def getChatAuth(self):
        return _mega.MegaNode_getChatAuth(self)

    def getChildren(self):
        return _mega.MegaNode_getChildren(self)

    def getOwner(self):
        return _mega.MegaNode_getOwner(self)

    def getDeviceId(self):
        return _mega.MegaNode_getDeviceId(self)

    def serialize(self):
        return _mega.MegaNode_serialize(self)

    @staticmethod
    def unserialize(d):
        return _mega.MegaNode_unserialize(d)

    def __init__(self):
        _mega.MegaNode_swiginit(self, _mega.new_MegaNode())

# Register MegaNode in _mega:
_mega.MegaNode_swigregister(MegaNode)
MegaNode.INVALID_COORDINATE = _mega.cvar.MegaNode_INVALID_COORDINATE

def MegaNode_unserialize(d):
    return _mega.MegaNode_unserialize(d)

class MegaUser(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    VISIBILITY_UNKNOWN = _mega.MegaUser_VISIBILITY_UNKNOWN
    VISIBILITY_HIDDEN = _mega.MegaUser_VISIBILITY_HIDDEN
    VISIBILITY_VISIBLE = _mega.MegaUser_VISIBILITY_VISIBLE
    VISIBILITY_INACTIVE = _mega.MegaUser_VISIBILITY_INACTIVE
    VISIBILITY_BLOCKED = _mega.MegaUser_VISIBILITY_BLOCKED
    __swig_destroy__ = _mega.delete_MegaUser

    def copy(self):
        return _mega.MegaUser_copy(self)

    def getEmail(self):
        return _mega.MegaUser_getEmail(self)

    def getHandle(self):
        return _mega.MegaUser_getHandle(self)

    def getVisibility(self):
        return _mega.MegaUser_getVisibility(self)

    def getTimestamp(self):
        return _mega.MegaUser_getTimestamp(self)
    CHANGE_TYPE_AUTHRING = _mega.MegaUser_CHANGE_TYPE_AUTHRING
    CHANGE_TYPE_LSTINT = _mega.MegaUser_CHANGE_TYPE_LSTINT
    CHANGE_TYPE_AVATAR = _mega.MegaUser_CHANGE_TYPE_AVATAR
    CHANGE_TYPE_FIRSTNAME = _mega.MegaUser_CHANGE_TYPE_FIRSTNAME
    CHANGE_TYPE_LASTNAME = _mega.MegaUser_CHANGE_TYPE_LASTNAME
    CHANGE_TYPE_EMAIL = _mega.MegaUser_CHANGE_TYPE_EMAIL
    CHANGE_TYPE_KEYRING = _mega.MegaUser_CHANGE_TYPE_KEYRING
    CHANGE_TYPE_COUNTRY = _mega.MegaUser_CHANGE_TYPE_COUNTRY
    CHANGE_TYPE_BIRTHDAY = _mega.MegaUser_CHANGE_TYPE_BIRTHDAY
    CHANGE_TYPE_PUBKEY_CU255 = _mega.MegaUser_CHANGE_TYPE_PUBKEY_CU255
    CHANGE_TYPE_PUBKEY_ED255 = _mega.MegaUser_CHANGE_TYPE_PUBKEY_ED255
    CHANGE_TYPE_SIG_PUBKEY_RSA = _mega.MegaUser_CHANGE_TYPE_SIG_PUBKEY_RSA
    CHANGE_TYPE_SIG_PUBKEY_CU255 = _mega.MegaUser_CHANGE_TYPE_SIG_PUBKEY_CU255
    CHANGE_TYPE_LANGUAGE = _mega.MegaUser_CHANGE_TYPE_LANGUAGE
    CHANGE_TYPE_PWD_REMINDER = _mega.MegaUser_CHANGE_TYPE_PWD_REMINDER
    CHANGE_TYPE_DISABLE_VERSIONS = _mega.MegaUser_CHANGE_TYPE_DISABLE_VERSIONS
    CHANGE_TYPE_CONTACT_LINK_VERIFICATION = _mega.MegaUser_CHANGE_TYPE_CONTACT_LINK_VERIFICATION
    CHANGE_TYPE_RICH_PREVIEWS = _mega.MegaUser_CHANGE_TYPE_RICH_PREVIEWS
    CHANGE_TYPE_RUBBISH_TIME = _mega.MegaUser_CHANGE_TYPE_RUBBISH_TIME
    CHANGE_TYPE_STORAGE_STATE = _mega.MegaUser_CHANGE_TYPE_STORAGE_STATE
    CHANGE_TYPE_GEOLOCATION = _mega.MegaUser_CHANGE_TYPE_GEOLOCATION
    CHANGE_TYPE_CAMERA_UPLOADS_FOLDER = _mega.MegaUser_CHANGE_TYPE_CAMERA_UPLOADS_FOLDER
    CHANGE_TYPE_MY_CHAT_FILES_FOLDER = _mega.MegaUser_CHANGE_TYPE_MY_CHAT_FILES_FOLDER
    CHANGE_TYPE_PUSH_SETTINGS = _mega.MegaUser_CHANGE_TYPE_PUSH_SETTINGS
    CHANGE_TYPE_ALIAS = _mega.MegaUser_CHANGE_TYPE_ALIAS
    CHANGE_TYPE_UNSHAREABLE_KEY = _mega.MegaUser_CHANGE_TYPE_UNSHAREABLE_KEY
    CHANGE_TYPE_DEVICE_NAMES = _mega.MegaUser_CHANGE_TYPE_DEVICE_NAMES
    CHANGE_TYPE_BACKUP_NAMES = _mega.MegaUser_CHANGE_TYPE_BACKUP_NAMES
    CHANGE_TYPE_COOKIE_SETTINGS = _mega.MegaUser_CHANGE_TYPE_COOKIE_SETTINGS

    def hasChanged(self, changeType):
        return _mega.MegaUser_hasChanged(self, changeType)

    def getChanges(self):
        return _mega.MegaUser_getChanges(self)

    def isOwnChange(self):
        return _mega.MegaUser_isOwnChange(self)

    def __init__(self):
        _mega.MegaUser_swiginit(self, _mega.new_MegaUser())

# Register MegaUser in _mega:
_mega.MegaUser_swigregister(MegaUser)

class MegaUserAlert(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TYPE_INCOMINGPENDINGCONTACT_REQUEST = _mega.MegaUserAlert_TYPE_INCOMINGPENDINGCONTACT_REQUEST
    TYPE_INCOMINGPENDINGCONTACT_CANCELLED = _mega.MegaUserAlert_TYPE_INCOMINGPENDINGCONTACT_CANCELLED
    TYPE_INCOMINGPENDINGCONTACT_REMINDER = _mega.MegaUserAlert_TYPE_INCOMINGPENDINGCONTACT_REMINDER
    TYPE_CONTACTCHANGE_DELETEDYOU = _mega.MegaUserAlert_TYPE_CONTACTCHANGE_DELETEDYOU
    TYPE_CONTACTCHANGE_CONTACTESTABLISHED = _mega.MegaUserAlert_TYPE_CONTACTCHANGE_CONTACTESTABLISHED
    TYPE_CONTACTCHANGE_ACCOUNTDELETED = _mega.MegaUserAlert_TYPE_CONTACTCHANGE_ACCOUNTDELETED
    TYPE_CONTACTCHANGE_BLOCKEDYOU = _mega.MegaUserAlert_TYPE_CONTACTCHANGE_BLOCKEDYOU
    TYPE_UPDATEDPENDINGCONTACTINCOMING_IGNORED = _mega.MegaUserAlert_TYPE_UPDATEDPENDINGCONTACTINCOMING_IGNORED
    TYPE_UPDATEDPENDINGCONTACTINCOMING_ACCEPTED = _mega.MegaUserAlert_TYPE_UPDATEDPENDINGCONTACTINCOMING_ACCEPTED
    TYPE_UPDATEDPENDINGCONTACTINCOMING_DENIED = _mega.MegaUserAlert_TYPE_UPDATEDPENDINGCONTACTINCOMING_DENIED
    TYPE_UPDATEDPENDINGCONTACTOUTGOING_ACCEPTED = _mega.MegaUserAlert_TYPE_UPDATEDPENDINGCONTACTOUTGOING_ACCEPTED
    TYPE_UPDATEDPENDINGCONTACTOUTGOING_DENIED = _mega.MegaUserAlert_TYPE_UPDATEDPENDINGCONTACTOUTGOING_DENIED
    TYPE_NEWSHARE = _mega.MegaUserAlert_TYPE_NEWSHARE
    TYPE_DELETEDSHARE = _mega.MegaUserAlert_TYPE_DELETEDSHARE
    TYPE_NEWSHAREDNODES = _mega.MegaUserAlert_TYPE_NEWSHAREDNODES
    TYPE_REMOVEDSHAREDNODES = _mega.MegaUserAlert_TYPE_REMOVEDSHAREDNODES
    TYPE_PAYMENT_SUCCEEDED = _mega.MegaUserAlert_TYPE_PAYMENT_SUCCEEDED
    TYPE_PAYMENT_FAILED = _mega.MegaUserAlert_TYPE_PAYMENT_FAILED
    TYPE_PAYMENTREMINDER = _mega.MegaUserAlert_TYPE_PAYMENTREMINDER
    TYPE_TAKEDOWN = _mega.MegaUserAlert_TYPE_TAKEDOWN
    TYPE_TAKEDOWN_REINSTATED = _mega.MegaUserAlert_TYPE_TAKEDOWN_REINSTATED
    TOTAL_OF_ALERT_TYPES = _mega.MegaUserAlert_TOTAL_OF_ALERT_TYPES
    __swig_destroy__ = _mega.delete_MegaUserAlert

    def copy(self):
        return _mega.MegaUserAlert_copy(self)

    def getId(self):
        return _mega.MegaUserAlert_getId(self)

    def getSeen(self):
        return _mega.MegaUserAlert_getSeen(self)

    def getRelevant(self):
        return _mega.MegaUserAlert_getRelevant(self)

    def getType(self):
        return _mega.MegaUserAlert_getType(self)

    def getTypeString(self):
        return _mega.MegaUserAlert_getTypeString(self)

    def getUserHandle(self):
        return _mega.MegaUserAlert_getUserHandle(self)

    def getNodeHandle(self):
        return _mega.MegaUserAlert_getNodeHandle(self)

    def getEmail(self):
        return _mega.MegaUserAlert_getEmail(self)

    def getPath(self):
        return _mega.MegaUserAlert_getPath(self)

    def getName(self):
        return _mega.MegaUserAlert_getName(self)

    def getHeading(self):
        return _mega.MegaUserAlert_getHeading(self)

    def getTitle(self):
        return _mega.MegaUserAlert_getTitle(self)

    def getNumber(self, index):
        return _mega.MegaUserAlert_getNumber(self, index)

    def getTimestamp(self, index):
        return _mega.MegaUserAlert_getTimestamp(self, index)

    def getString(self, index):
        return _mega.MegaUserAlert_getString(self, index)

    def isOwnChange(self):
        return _mega.MegaUserAlert_isOwnChange(self)

    def __init__(self):
        _mega.MegaUserAlert_swiginit(self, _mega.new_MegaUserAlert())

# Register MegaUserAlert in _mega:
_mega.MegaUserAlert_swigregister(MegaUserAlert)

class MegaHandleList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaHandleList_createInstance()
    __swig_destroy__ = _mega.delete_MegaHandleList

    def copy(self):
        return _mega.MegaHandleList_copy(self)

    def get(self, i):
        return _mega.MegaHandleList_get(self, i)

    def size(self):
        return _mega.MegaHandleList_size(self)

    def addMegaHandle(self, megaHandle):
        return _mega.MegaHandleList_addMegaHandle(self, megaHandle)

# Register MegaHandleList in _mega:
_mega.MegaHandleList_swigregister(MegaHandleList)

def MegaHandleList_createInstance():
    return _mega.MegaHandleList_createInstance()

class MegaIntegerList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaIntegerList

    def copy(self):
        return _mega.MegaIntegerList_copy(self)

    def get(self, i):
        return _mega.MegaIntegerList_get(self, i)

    def size(self):
        return _mega.MegaIntegerList_size(self)

    def __init__(self):
        _mega.MegaIntegerList_swiginit(self, _mega.new_MegaIntegerList())

# Register MegaIntegerList in _mega:
_mega.MegaIntegerList_swigregister(MegaIntegerList)

class MegaShare(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ACCESS_UNKNOWN = _mega.MegaShare_ACCESS_UNKNOWN
    ACCESS_READ = _mega.MegaShare_ACCESS_READ
    ACCESS_READWRITE = _mega.MegaShare_ACCESS_READWRITE
    ACCESS_FULL = _mega.MegaShare_ACCESS_FULL
    ACCESS_OWNER = _mega.MegaShare_ACCESS_OWNER
    __swig_destroy__ = _mega.delete_MegaShare

    def copy(self):
        return _mega.MegaShare_copy(self)

    def getUser(self):
        return _mega.MegaShare_getUser(self)

    def getNodeHandle(self):
        return _mega.MegaShare_getNodeHandle(self)

    def getAccess(self):
        return _mega.MegaShare_getAccess(self)

    def getTimestamp(self):
        return _mega.MegaShare_getTimestamp(self)

    def isPending(self):
        return _mega.MegaShare_isPending(self)

    def __init__(self):
        _mega.MegaShare_swiginit(self, _mega.new_MegaShare())

# Register MegaShare in _mega:
_mega.MegaShare_swigregister(MegaShare)

class MegaTextChatPeerList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PRIV_UNKNOWN = _mega.MegaTextChatPeerList_PRIV_UNKNOWN
    PRIV_RM = _mega.MegaTextChatPeerList_PRIV_RM
    PRIV_RO = _mega.MegaTextChatPeerList_PRIV_RO
    PRIV_STANDARD = _mega.MegaTextChatPeerList_PRIV_STANDARD
    PRIV_MODERATOR = _mega.MegaTextChatPeerList_PRIV_MODERATOR

    @staticmethod
    def createInstance():
        return _mega.MegaTextChatPeerList_createInstance()
    __swig_destroy__ = _mega.delete_MegaTextChatPeerList

    def copy(self):
        return _mega.MegaTextChatPeerList_copy(self)

    def addPeer(self, h, priv):
        return _mega.MegaTextChatPeerList_addPeer(self, h, priv)

    def getPeerHandle(self, i):
        return _mega.MegaTextChatPeerList_getPeerHandle(self, i)

    def getPeerPrivilege(self, i):
        return _mega.MegaTextChatPeerList_getPeerPrivilege(self, i)

    def size(self):
        return _mega.MegaTextChatPeerList_size(self)

# Register MegaTextChatPeerList in _mega:
_mega.MegaTextChatPeerList_swigregister(MegaTextChatPeerList)

def MegaTextChatPeerList_createInstance():
    return _mega.MegaTextChatPeerList_createInstance()

class MegaTextChat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CHANGE_TYPE_ATTACHMENT = _mega.MegaTextChat_CHANGE_TYPE_ATTACHMENT
    CHANGE_TYPE_FLAGS = _mega.MegaTextChat_CHANGE_TYPE_FLAGS
    CHANGE_TYPE_MODE = _mega.MegaTextChat_CHANGE_TYPE_MODE
    __swig_destroy__ = _mega.delete_MegaTextChat

    def copy(self):
        return _mega.MegaTextChat_copy(self)

    def getHandle(self):
        return _mega.MegaTextChat_getHandle(self)

    def getOwnPrivilege(self):
        return _mega.MegaTextChat_getOwnPrivilege(self)

    def getShard(self):
        return _mega.MegaTextChat_getShard(self)

    def getPeerList(self):
        return _mega.MegaTextChat_getPeerList(self)

    def setPeerList(self, peers):
        return _mega.MegaTextChat_setPeerList(self, peers)

    def isGroup(self):
        return _mega.MegaTextChat_isGroup(self)

    def getOriginatingUser(self):
        return _mega.MegaTextChat_getOriginatingUser(self)

    def getTitle(self):
        return _mega.MegaTextChat_getTitle(self)

    def getUnifiedKey(self):
        return _mega.MegaTextChat_getUnifiedKey(self)

    def hasChanged(self, changeType):
        return _mega.MegaTextChat_hasChanged(self, changeType)

    def getChanges(self):
        return _mega.MegaTextChat_getChanges(self)

    def isOwnChange(self):
        return _mega.MegaTextChat_isOwnChange(self)

    def getCreationTime(self):
        return _mega.MegaTextChat_getCreationTime(self)

    def isArchived(self):
        return _mega.MegaTextChat_isArchived(self)

    def isPublicChat(self):
        return _mega.MegaTextChat_isPublicChat(self)

    def __init__(self):
        _mega.MegaTextChat_swiginit(self, _mega.new_MegaTextChat())

# Register MegaTextChat in _mega:
_mega.MegaTextChat_swigregister(MegaTextChat)

class MegaTextChatList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaTextChatList

    def copy(self):
        return _mega.MegaTextChatList_copy(self)

    def get(self, i):
        return _mega.MegaTextChatList_get(self, i)

    def size(self):
        return _mega.MegaTextChatList_size(self)

    def __init__(self):
        _mega.MegaTextChatList_swiginit(self, _mega.new_MegaTextChatList())

# Register MegaTextChatList in _mega:
_mega.MegaTextChatList_swigregister(MegaTextChatList)

class MegaStringMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaStringMap_createInstance()
    __swig_destroy__ = _mega.delete_MegaStringMap

    def copy(self):
        return _mega.MegaStringMap_copy(self)

    def get(self, key):
        return _mega.MegaStringMap_get(self, key)

    def getKeys(self):
        return _mega.MegaStringMap_getKeys(self)

    def set(self, key, value):
        return _mega.MegaStringMap_set(self, key, value)

    def size(self):
        return _mega.MegaStringMap_size(self)

# Register MegaStringMap in _mega:
_mega.MegaStringMap_swigregister(MegaStringMap)

def MegaStringMap_createInstance():
    return _mega.MegaStringMap_createInstance()

class MegaStringList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaStringList_createInstance()
    __swig_destroy__ = _mega.delete_MegaStringList

    def copy(self):
        return _mega.MegaStringList_copy(self)

    def get(self, i):
        return _mega.MegaStringList_get(self, i)

    def size(self):
        return _mega.MegaStringList_size(self)

    def add(self, value):
        return _mega.MegaStringList_add(self, value)

    def __init__(self):
        _mega.MegaStringList_swiginit(self, _mega.new_MegaStringList())

# Register MegaStringList in _mega:
_mega.MegaStringList_swigregister(MegaStringList)

def MegaStringList_createInstance():
    return _mega.MegaStringList_createInstance()

class MegaStringListMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaStringListMap

    @staticmethod
    def createInstance():
        return _mega.MegaStringListMap_createInstance()

    def copy(self):
        return _mega.MegaStringListMap_copy(self)

    def get(self, key):
        return _mega.MegaStringListMap_get(self, key)

    def getKeys(self):
        return _mega.MegaStringListMap_getKeys(self)

    def set(self, key, value):
        return _mega.MegaStringListMap_set(self, key, value)

    def size(self):
        return _mega.MegaStringListMap_size(self)

# Register MegaStringListMap in _mega:
_mega.MegaStringListMap_swigregister(MegaStringListMap)

def MegaStringListMap_createInstance():
    return _mega.MegaStringListMap_createInstance()

class MegaStringTable(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaStringTable

    @staticmethod
    def createInstance():
        return _mega.MegaStringTable_createInstance()

    def copy(self):
        return _mega.MegaStringTable_copy(self)

    def append(self, value):
        return _mega.MegaStringTable_append(self, value)

    def get(self, i):
        return _mega.MegaStringTable_get(self, i)

    def size(self):
        return _mega.MegaStringTable_size(self)

# Register MegaStringTable in _mega:
_mega.MegaStringTable_swigregister(MegaStringTable)

def MegaStringTable_createInstance():
    return _mega.MegaStringTable_createInstance()

class MegaNodeList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaNodeList_createInstance()
    __swig_destroy__ = _mega.delete_MegaNodeList

    def copy(self):
        return _mega.MegaNodeList_copy(self)

    def get(self, i):
        return _mega.MegaNodeList_get(self, i)

    def size(self):
        return _mega.MegaNodeList_size(self)

    def addNode(self, node):
        return _mega.MegaNodeList_addNode(self, node)

# Register MegaNodeList in _mega:
_mega.MegaNodeList_swigregister(MegaNodeList)

def MegaNodeList_createInstance():
    return _mega.MegaNodeList_createInstance()

class MegaChildrenLists(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaChildrenLists

    def copy(self):
        return _mega.MegaChildrenLists_copy(self)

    def getFolderList(self):
        return _mega.MegaChildrenLists_getFolderList(self)

    def getFileList(self):
        return _mega.MegaChildrenLists_getFileList(self)

    def __init__(self):
        _mega.MegaChildrenLists_swiginit(self, _mega.new_MegaChildrenLists())

# Register MegaChildrenLists in _mega:
_mega.MegaChildrenLists_swigregister(MegaChildrenLists)

class MegaUserList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaUserList

    def copy(self):
        return _mega.MegaUserList_copy(self)

    def get(self, i):
        return _mega.MegaUserList_get(self, i)

    def size(self):
        return _mega.MegaUserList_size(self)

    def __init__(self):
        _mega.MegaUserList_swiginit(self, _mega.new_MegaUserList())

# Register MegaUserList in _mega:
_mega.MegaUserList_swigregister(MegaUserList)

class MegaShareList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaShareList

    def get(self, i):
        return _mega.MegaShareList_get(self, i)

    def size(self):
        return _mega.MegaShareList_size(self)

    def __init__(self):
        _mega.MegaShareList_swiginit(self, _mega.new_MegaShareList())

# Register MegaShareList in _mega:
_mega.MegaShareList_swigregister(MegaShareList)

class MegaTransferList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaTransferList

    def get(self, i):
        return _mega.MegaTransferList_get(self, i)

    def size(self):
        return _mega.MegaTransferList_size(self)

    def __init__(self):
        _mega.MegaTransferList_swiginit(self, _mega.new_MegaTransferList())

# Register MegaTransferList in _mega:
_mega.MegaTransferList_swigregister(MegaTransferList)

class MegaContactRequestList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaContactRequestList

    def copy(self):
        return _mega.MegaContactRequestList_copy(self)

    def get(self, i):
        return _mega.MegaContactRequestList_get(self, i)

    def size(self):
        return _mega.MegaContactRequestList_size(self)

    def __init__(self):
        _mega.MegaContactRequestList_swiginit(self, _mega.new_MegaContactRequestList())

# Register MegaContactRequestList in _mega:
_mega.MegaContactRequestList_swigregister(MegaContactRequestList)

class MegaUserAlertList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaUserAlertList

    def copy(self):
        return _mega.MegaUserAlertList_copy(self)

    def get(self, i):
        return _mega.MegaUserAlertList_get(self, i)

    def size(self):
        return _mega.MegaUserAlertList_size(self)

    def clear(self):
        return _mega.MegaUserAlertList_clear(self)

    def __init__(self):
        _mega.MegaUserAlertList_swiginit(self, _mega.new_MegaUserAlertList())

# Register MegaUserAlertList in _mega:
_mega.MegaUserAlertList_swigregister(MegaUserAlertList)

class MegaRecentActionBucket(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaRecentActionBucket

    def copy(self):
        return _mega.MegaRecentActionBucket_copy(self)

    def getTimestamp(self):
        return _mega.MegaRecentActionBucket_getTimestamp(self)

    def getUserEmail(self):
        return _mega.MegaRecentActionBucket_getUserEmail(self)

    def getParentHandle(self):
        return _mega.MegaRecentActionBucket_getParentHandle(self)

    def isUpdate(self):
        return _mega.MegaRecentActionBucket_isUpdate(self)

    def isMedia(self):
        return _mega.MegaRecentActionBucket_isMedia(self)

    def getNodes(self):
        return _mega.MegaRecentActionBucket_getNodes(self)

    def __init__(self):
        _mega.MegaRecentActionBucket_swiginit(self, _mega.new_MegaRecentActionBucket())

# Register MegaRecentActionBucket in _mega:
_mega.MegaRecentActionBucket_swigregister(MegaRecentActionBucket)

class MegaRecentActionBucketList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaRecentActionBucketList

    def copy(self):
        return _mega.MegaRecentActionBucketList_copy(self)

    def get(self, i):
        return _mega.MegaRecentActionBucketList_get(self, i)

    def size(self):
        return _mega.MegaRecentActionBucketList_size(self)

    def __init__(self):
        _mega.MegaRecentActionBucketList_swiginit(self, _mega.new_MegaRecentActionBucketList())

# Register MegaRecentActionBucketList in _mega:
_mega.MegaRecentActionBucketList_swigregister(MegaRecentActionBucketList)

class MegaBanner(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaBanner

    def copy(self):
        return _mega.MegaBanner_copy(self)

    def getId(self):
        return _mega.MegaBanner_getId(self)

    def getTitle(self):
        return _mega.MegaBanner_getTitle(self)

    def getDescription(self):
        return _mega.MegaBanner_getDescription(self)

    def getImage(self):
        return _mega.MegaBanner_getImage(self)

    def getUrl(self):
        return _mega.MegaBanner_getUrl(self)

    def getBackgroundImage(self):
        return _mega.MegaBanner_getBackgroundImage(self)

    def getImageLocation(self):
        return _mega.MegaBanner_getImageLocation(self)

# Register MegaBanner in _mega:
_mega.MegaBanner_swigregister(MegaBanner)

class MegaBannerList(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaBannerList

    def copy(self):
        return _mega.MegaBannerList_copy(self)

    def get(self, i):
        return _mega.MegaBannerList_get(self, i)

    def size(self):
        return _mega.MegaBannerList_size(self)

# Register MegaBannerList in _mega:
_mega.MegaBannerList_swigregister(MegaBannerList)

class MegaRequest(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TYPE_LOGIN = _mega.MegaRequest_TYPE_LOGIN
    TYPE_CREATE_FOLDER = _mega.MegaRequest_TYPE_CREATE_FOLDER
    TYPE_MOVE = _mega.MegaRequest_TYPE_MOVE
    TYPE_COPY = _mega.MegaRequest_TYPE_COPY
    TYPE_RENAME = _mega.MegaRequest_TYPE_RENAME
    TYPE_REMOVE = _mega.MegaRequest_TYPE_REMOVE
    TYPE_SHARE = _mega.MegaRequest_TYPE_SHARE
    TYPE_IMPORT_LINK = _mega.MegaRequest_TYPE_IMPORT_LINK
    TYPE_EXPORT = _mega.MegaRequest_TYPE_EXPORT
    TYPE_FETCH_NODES = _mega.MegaRequest_TYPE_FETCH_NODES
    TYPE_ACCOUNT_DETAILS = _mega.MegaRequest_TYPE_ACCOUNT_DETAILS
    TYPE_CHANGE_PW = _mega.MegaRequest_TYPE_CHANGE_PW
    TYPE_UPLOAD = _mega.MegaRequest_TYPE_UPLOAD
    TYPE_LOGOUT = _mega.MegaRequest_TYPE_LOGOUT
    TYPE_GET_PUBLIC_NODE = _mega.MegaRequest_TYPE_GET_PUBLIC_NODE
    TYPE_GET_ATTR_FILE = _mega.MegaRequest_TYPE_GET_ATTR_FILE
    TYPE_SET_ATTR_FILE = _mega.MegaRequest_TYPE_SET_ATTR_FILE
    TYPE_GET_ATTR_USER = _mega.MegaRequest_TYPE_GET_ATTR_USER
    TYPE_SET_ATTR_USER = _mega.MegaRequest_TYPE_SET_ATTR_USER
    TYPE_RETRY_PENDING_CONNECTIONS = _mega.MegaRequest_TYPE_RETRY_PENDING_CONNECTIONS
    TYPE_REMOVE_CONTACT = _mega.MegaRequest_TYPE_REMOVE_CONTACT
    TYPE_CREATE_ACCOUNT = _mega.MegaRequest_TYPE_CREATE_ACCOUNT
    TYPE_CONFIRM_ACCOUNT = _mega.MegaRequest_TYPE_CONFIRM_ACCOUNT
    TYPE_QUERY_SIGNUP_LINK = _mega.MegaRequest_TYPE_QUERY_SIGNUP_LINK
    TYPE_ADD_SYNC = _mega.MegaRequest_TYPE_ADD_SYNC
    TYPE_REMOVE_SYNC = _mega.MegaRequest_TYPE_REMOVE_SYNC
    TYPE_DISABLE_SYNC = _mega.MegaRequest_TYPE_DISABLE_SYNC
    TYPE_ENABLE_SYNC = _mega.MegaRequest_TYPE_ENABLE_SYNC
    TYPE_COPY_SYNC_CONFIG = _mega.MegaRequest_TYPE_COPY_SYNC_CONFIG
    TYPE_COPY_CACHED_STATUS = _mega.MegaRequest_TYPE_COPY_CACHED_STATUS
    TYPE_REMOVE_SYNCS = _mega.MegaRequest_TYPE_REMOVE_SYNCS
    TYPE_PAUSE_TRANSFERS = _mega.MegaRequest_TYPE_PAUSE_TRANSFERS
    TYPE_CANCEL_TRANSFER = _mega.MegaRequest_TYPE_CANCEL_TRANSFER
    TYPE_CANCEL_TRANSFERS = _mega.MegaRequest_TYPE_CANCEL_TRANSFERS
    TYPE_DELETE = _mega.MegaRequest_TYPE_DELETE
    TYPE_REPORT_EVENT = _mega.MegaRequest_TYPE_REPORT_EVENT
    TYPE_CANCEL_ATTR_FILE = _mega.MegaRequest_TYPE_CANCEL_ATTR_FILE
    TYPE_GET_PRICING = _mega.MegaRequest_TYPE_GET_PRICING
    TYPE_GET_PAYMENT_ID = _mega.MegaRequest_TYPE_GET_PAYMENT_ID
    TYPE_GET_USER_DATA = _mega.MegaRequest_TYPE_GET_USER_DATA
    TYPE_LOAD_BALANCING = _mega.MegaRequest_TYPE_LOAD_BALANCING
    TYPE_KILL_SESSION = _mega.MegaRequest_TYPE_KILL_SESSION
    TYPE_SUBMIT_PURCHASE_RECEIPT = _mega.MegaRequest_TYPE_SUBMIT_PURCHASE_RECEIPT
    TYPE_CREDIT_CARD_STORE = _mega.MegaRequest_TYPE_CREDIT_CARD_STORE
    TYPE_UPGRADE_ACCOUNT = _mega.MegaRequest_TYPE_UPGRADE_ACCOUNT
    TYPE_CREDIT_CARD_QUERY_SUBSCRIPTIONS = _mega.MegaRequest_TYPE_CREDIT_CARD_QUERY_SUBSCRIPTIONS
    TYPE_CREDIT_CARD_CANCEL_SUBSCRIPTIONS = _mega.MegaRequest_TYPE_CREDIT_CARD_CANCEL_SUBSCRIPTIONS
    TYPE_GET_SESSION_TRANSFER_URL = _mega.MegaRequest_TYPE_GET_SESSION_TRANSFER_URL
    TYPE_GET_PAYMENT_METHODS = _mega.MegaRequest_TYPE_GET_PAYMENT_METHODS
    TYPE_INVITE_CONTACT = _mega.MegaRequest_TYPE_INVITE_CONTACT
    TYPE_REPLY_CONTACT_REQUEST = _mega.MegaRequest_TYPE_REPLY_CONTACT_REQUEST
    TYPE_SUBMIT_FEEDBACK = _mega.MegaRequest_TYPE_SUBMIT_FEEDBACK
    TYPE_SEND_EVENT = _mega.MegaRequest_TYPE_SEND_EVENT
    TYPE_CLEAN_RUBBISH_BIN = _mega.MegaRequest_TYPE_CLEAN_RUBBISH_BIN
    TYPE_SET_ATTR_NODE = _mega.MegaRequest_TYPE_SET_ATTR_NODE
    TYPE_CHAT_CREATE = _mega.MegaRequest_TYPE_CHAT_CREATE
    TYPE_CHAT_FETCH = _mega.MegaRequest_TYPE_CHAT_FETCH
    TYPE_CHAT_INVITE = _mega.MegaRequest_TYPE_CHAT_INVITE
    TYPE_CHAT_REMOVE = _mega.MegaRequest_TYPE_CHAT_REMOVE
    TYPE_CHAT_URL = _mega.MegaRequest_TYPE_CHAT_URL
    TYPE_CHAT_GRANT_ACCESS = _mega.MegaRequest_TYPE_CHAT_GRANT_ACCESS
    TYPE_CHAT_REMOVE_ACCESS = _mega.MegaRequest_TYPE_CHAT_REMOVE_ACCESS
    TYPE_USE_HTTPS_ONLY = _mega.MegaRequest_TYPE_USE_HTTPS_ONLY
    TYPE_SET_PROXY = _mega.MegaRequest_TYPE_SET_PROXY
    TYPE_GET_RECOVERY_LINK = _mega.MegaRequest_TYPE_GET_RECOVERY_LINK
    TYPE_QUERY_RECOVERY_LINK = _mega.MegaRequest_TYPE_QUERY_RECOVERY_LINK
    TYPE_CONFIRM_RECOVERY_LINK = _mega.MegaRequest_TYPE_CONFIRM_RECOVERY_LINK
    TYPE_GET_CANCEL_LINK = _mega.MegaRequest_TYPE_GET_CANCEL_LINK
    TYPE_CONFIRM_CANCEL_LINK = _mega.MegaRequest_TYPE_CONFIRM_CANCEL_LINK
    TYPE_GET_CHANGE_EMAIL_LINK = _mega.MegaRequest_TYPE_GET_CHANGE_EMAIL_LINK
    TYPE_CONFIRM_CHANGE_EMAIL_LINK = _mega.MegaRequest_TYPE_CONFIRM_CHANGE_EMAIL_LINK
    TYPE_CHAT_UPDATE_PERMISSIONS = _mega.MegaRequest_TYPE_CHAT_UPDATE_PERMISSIONS
    TYPE_CHAT_TRUNCATE = _mega.MegaRequest_TYPE_CHAT_TRUNCATE
    TYPE_CHAT_SET_TITLE = _mega.MegaRequest_TYPE_CHAT_SET_TITLE
    TYPE_SET_MAX_CONNECTIONS = _mega.MegaRequest_TYPE_SET_MAX_CONNECTIONS
    TYPE_PAUSE_TRANSFER = _mega.MegaRequest_TYPE_PAUSE_TRANSFER
    TYPE_MOVE_TRANSFER = _mega.MegaRequest_TYPE_MOVE_TRANSFER
    TYPE_CHAT_PRESENCE_URL = _mega.MegaRequest_TYPE_CHAT_PRESENCE_URL
    TYPE_REGISTER_PUSH_NOTIFICATION = _mega.MegaRequest_TYPE_REGISTER_PUSH_NOTIFICATION
    TYPE_GET_USER_EMAIL = _mega.MegaRequest_TYPE_GET_USER_EMAIL
    TYPE_APP_VERSION = _mega.MegaRequest_TYPE_APP_VERSION
    TYPE_GET_LOCAL_SSL_CERT = _mega.MegaRequest_TYPE_GET_LOCAL_SSL_CERT
    TYPE_SEND_SIGNUP_LINK = _mega.MegaRequest_TYPE_SEND_SIGNUP_LINK
    TYPE_QUERY_DNS = _mega.MegaRequest_TYPE_QUERY_DNS
    TYPE_QUERY_GELB = _mega.MegaRequest_TYPE_QUERY_GELB
    TYPE_CHAT_STATS = _mega.MegaRequest_TYPE_CHAT_STATS
    TYPE_DOWNLOAD_FILE = _mega.MegaRequest_TYPE_DOWNLOAD_FILE
    TYPE_QUERY_TRANSFER_QUOTA = _mega.MegaRequest_TYPE_QUERY_TRANSFER_QUOTA
    TYPE_PASSWORD_LINK = _mega.MegaRequest_TYPE_PASSWORD_LINK
    TYPE_GET_ACHIEVEMENTS = _mega.MegaRequest_TYPE_GET_ACHIEVEMENTS
    TYPE_RESTORE = _mega.MegaRequest_TYPE_RESTORE
    TYPE_REMOVE_VERSIONS = _mega.MegaRequest_TYPE_REMOVE_VERSIONS
    TYPE_CHAT_ARCHIVE = _mega.MegaRequest_TYPE_CHAT_ARCHIVE
    TYPE_WHY_AM_I_BLOCKED = _mega.MegaRequest_TYPE_WHY_AM_I_BLOCKED
    TYPE_CONTACT_LINK_CREATE = _mega.MegaRequest_TYPE_CONTACT_LINK_CREATE
    TYPE_CONTACT_LINK_QUERY = _mega.MegaRequest_TYPE_CONTACT_LINK_QUERY
    TYPE_CONTACT_LINK_DELETE = _mega.MegaRequest_TYPE_CONTACT_LINK_DELETE
    TYPE_FOLDER_INFO = _mega.MegaRequest_TYPE_FOLDER_INFO
    TYPE_RICH_LINK = _mega.MegaRequest_TYPE_RICH_LINK
    TYPE_KEEP_ME_ALIVE = _mega.MegaRequest_TYPE_KEEP_ME_ALIVE
    TYPE_MULTI_FACTOR_AUTH_CHECK = _mega.MegaRequest_TYPE_MULTI_FACTOR_AUTH_CHECK
    TYPE_MULTI_FACTOR_AUTH_GET = _mega.MegaRequest_TYPE_MULTI_FACTOR_AUTH_GET
    TYPE_MULTI_FACTOR_AUTH_SET = _mega.MegaRequest_TYPE_MULTI_FACTOR_AUTH_SET
    TYPE_ADD_BACKUP = _mega.MegaRequest_TYPE_ADD_BACKUP
    TYPE_REMOVE_BACKUP = _mega.MegaRequest_TYPE_REMOVE_BACKUP
    TYPE_TIMER = _mega.MegaRequest_TYPE_TIMER
    TYPE_ABORT_CURRENT_BACKUP = _mega.MegaRequest_TYPE_ABORT_CURRENT_BACKUP
    TYPE_GET_PSA = _mega.MegaRequest_TYPE_GET_PSA
    TYPE_FETCH_TIMEZONE = _mega.MegaRequest_TYPE_FETCH_TIMEZONE
    TYPE_USERALERT_ACKNOWLEDGE = _mega.MegaRequest_TYPE_USERALERT_ACKNOWLEDGE
    TYPE_CHAT_LINK_HANDLE = _mega.MegaRequest_TYPE_CHAT_LINK_HANDLE
    TYPE_CHAT_LINK_URL = _mega.MegaRequest_TYPE_CHAT_LINK_URL
    TYPE_SET_PRIVATE_MODE = _mega.MegaRequest_TYPE_SET_PRIVATE_MODE
    TYPE_AUTOJOIN_PUBLIC_CHAT = _mega.MegaRequest_TYPE_AUTOJOIN_PUBLIC_CHAT
    TYPE_CATCHUP = _mega.MegaRequest_TYPE_CATCHUP
    TYPE_PUBLIC_LINK_INFORMATION = _mega.MegaRequest_TYPE_PUBLIC_LINK_INFORMATION
    TYPE_GET_BACKGROUND_UPLOAD_URL = _mega.MegaRequest_TYPE_GET_BACKGROUND_UPLOAD_URL
    TYPE_COMPLETE_BACKGROUND_UPLOAD = _mega.MegaRequest_TYPE_COMPLETE_BACKGROUND_UPLOAD
    TYPE_GET_CLOUD_STORAGE_USED = _mega.MegaRequest_TYPE_GET_CLOUD_STORAGE_USED
    TYPE_SEND_SMS_VERIFICATIONCODE = _mega.MegaRequest_TYPE_SEND_SMS_VERIFICATIONCODE
    TYPE_CHECK_SMS_VERIFICATIONCODE = _mega.MegaRequest_TYPE_CHECK_SMS_VERIFICATIONCODE
    TYPE_GET_REGISTERED_CONTACTS = _mega.MegaRequest_TYPE_GET_REGISTERED_CONTACTS
    TYPE_GET_COUNTRY_CALLING_CODES = _mega.MegaRequest_TYPE_GET_COUNTRY_CALLING_CODES
    TYPE_VERIFY_CREDENTIALS = _mega.MegaRequest_TYPE_VERIFY_CREDENTIALS
    TYPE_GET_MISC_FLAGS = _mega.MegaRequest_TYPE_GET_MISC_FLAGS
    TYPE_RESEND_VERIFICATION_EMAIL = _mega.MegaRequest_TYPE_RESEND_VERIFICATION_EMAIL
    TYPE_SUPPORT_TICKET = _mega.MegaRequest_TYPE_SUPPORT_TICKET
    TYPE_SET_RETENTION_TIME = _mega.MegaRequest_TYPE_SET_RETENTION_TIME
    TYPE_RESET_SMS_VERIFIED_NUMBER = _mega.MegaRequest_TYPE_RESET_SMS_VERIFIED_NUMBER
    TYPE_SEND_DEV_COMMAND = _mega.MegaRequest_TYPE_SEND_DEV_COMMAND
    TYPE_GET_BANNERS = _mega.MegaRequest_TYPE_GET_BANNERS
    TYPE_DISMISS_BANNER = _mega.MegaRequest_TYPE_DISMISS_BANNER
    TYPE_BACKUP_PUT = _mega.MegaRequest_TYPE_BACKUP_PUT
    TYPE_BACKUP_REMOVE = _mega.MegaRequest_TYPE_BACKUP_REMOVE
    TYPE_BACKUP_PUT_HEART_BEAT = _mega.MegaRequest_TYPE_BACKUP_PUT_HEART_BEAT
    TYPE_FETCH_GOOGLE_ADS = _mega.MegaRequest_TYPE_FETCH_GOOGLE_ADS
    TYPE_QUERY_GOOGLE_ADS = _mega.MegaRequest_TYPE_QUERY_GOOGLE_ADS
    TYPE_GET_ATTR_NODE = _mega.MegaRequest_TYPE_GET_ATTR_NODE
    TOTAL_OF_REQUEST_TYPES = _mega.MegaRequest_TOTAL_OF_REQUEST_TYPES
    __swig_destroy__ = _mega.delete_MegaRequest

    def copy(self):
        return _mega.MegaRequest_copy(self)

    def getType(self):
        return _mega.MegaRequest_getType(self)

    def getRequestString(self):
        return _mega.MegaRequest_getRequestString(self)

    def toString(self):
        return _mega.MegaRequest_toString(self)

    def __str__(self):
        return _mega.MegaRequest___str__(self)

    def __toString(self):
        return _mega.MegaRequest___toString(self)

    def getNodeHandle(self):
        return _mega.MegaRequest_getNodeHandle(self)

    def getLink(self):
        return _mega.MegaRequest_getLink(self)

    def getParentHandle(self):
        return _mega.MegaRequest_getParentHandle(self)

    def getSessionKey(self):
        return _mega.MegaRequest_getSessionKey(self)

    def getName(self):
        return _mega.MegaRequest_getName(self)

    def getEmail(self):
        return _mega.MegaRequest_getEmail(self)

    def getPassword(self):
        return _mega.MegaRequest_getPassword(self)

    def getNewPassword(self):
        return _mega.MegaRequest_getNewPassword(self)

    def getPrivateKey(self):
        return _mega.MegaRequest_getPrivateKey(self)

    def getAccess(self):
        return _mega.MegaRequest_getAccess(self)

    def getFile(self):
        return _mega.MegaRequest_getFile(self)

    def getNumRetry(self):
        return _mega.MegaRequest_getNumRetry(self)

    def getPublicNode(self):
        return _mega.MegaRequest_getPublicNode(self)

    def getPublicMegaNode(self):
        return _mega.MegaRequest_getPublicMegaNode(self)

    def getParamType(self):
        return _mega.MegaRequest_getParamType(self)

    def getText(self):
        return _mega.MegaRequest_getText(self)

    def getNumber(self):
        return _mega.MegaRequest_getNumber(self)

    def getFlag(self):
        return _mega.MegaRequest_getFlag(self)

    def getTransferredBytes(self):
        return _mega.MegaRequest_getTransferredBytes(self)

    def getTotalBytes(self):
        return _mega.MegaRequest_getTotalBytes(self)

    def getMegaAccountDetails(self):
        return _mega.MegaRequest_getMegaAccountDetails(self)

    def getPricing(self):
        return _mega.MegaRequest_getPricing(self)

    def getMegaAchievementsDetails(self):
        return _mega.MegaRequest_getMegaAchievementsDetails(self)

    def getMegaTimeZoneDetails(self):
        return _mega.MegaRequest_getMegaTimeZoneDetails(self)

    def getTransferTag(self):
        return _mega.MegaRequest_getTransferTag(self)

    def getNumDetails(self):
        return _mega.MegaRequest_getNumDetails(self)

    def getTag(self):
        return _mega.MegaRequest_getTag(self)

    def getMegaTextChatPeerList(self):
        return _mega.MegaRequest_getMegaTextChatPeerList(self)

    def getMegaTextChatList(self):
        return _mega.MegaRequest_getMegaTextChatList(self)

    def getMegaStringMap(self):
        return _mega.MegaRequest_getMegaStringMap(self)

    def getMegaStringListMap(self):
        return _mega.MegaRequest_getMegaStringListMap(self)

    def getMegaStringTable(self):
        return _mega.MegaRequest_getMegaStringTable(self)

    def getMegaFolderInfo(self):
        return _mega.MegaRequest_getMegaFolderInfo(self)

    def getMegaPushNotificationSettings(self):
        return _mega.MegaRequest_getMegaPushNotificationSettings(self)

    def getMegaBackgroundMediaUploadPtr(self):
        return _mega.MegaRequest_getMegaBackgroundMediaUploadPtr(self)

    def getMegaBannerList(self):
        return _mega.MegaRequest_getMegaBannerList(self)

    def getMegaStringList(self):
        return _mega.MegaRequest_getMegaStringList(self)

    def getMegaHandleList(self):
        return _mega.MegaRequest_getMegaHandleList(self)

    def __init__(self):
        _mega.MegaRequest_swiginit(self, _mega.new_MegaRequest())

# Register MegaRequest in _mega:
_mega.MegaRequest_swigregister(MegaRequest)

class MegaEvent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EVENT_COMMIT_DB = _mega.MegaEvent_EVENT_COMMIT_DB
    EVENT_ACCOUNT_CONFIRMATION = _mega.MegaEvent_EVENT_ACCOUNT_CONFIRMATION
    EVENT_CHANGE_TO_HTTPS = _mega.MegaEvent_EVENT_CHANGE_TO_HTTPS
    EVENT_DISCONNECT = _mega.MegaEvent_EVENT_DISCONNECT
    EVENT_ACCOUNT_BLOCKED = _mega.MegaEvent_EVENT_ACCOUNT_BLOCKED
    EVENT_STORAGE = _mega.MegaEvent_EVENT_STORAGE
    EVENT_NODES_CURRENT = _mega.MegaEvent_EVENT_NODES_CURRENT
    EVENT_MEDIA_INFO_READY = _mega.MegaEvent_EVENT_MEDIA_INFO_READY
    EVENT_STORAGE_SUM_CHANGED = _mega.MegaEvent_EVENT_STORAGE_SUM_CHANGED
    EVENT_BUSINESS_STATUS = _mega.MegaEvent_EVENT_BUSINESS_STATUS
    EVENT_KEY_MODIFIED = _mega.MegaEvent_EVENT_KEY_MODIFIED
    EVENT_MISC_FLAGS_READY = _mega.MegaEvent_EVENT_MISC_FLAGS_READY
    __swig_destroy__ = _mega.delete_MegaEvent

    def copy(self):
        return _mega.MegaEvent_copy(self)

    def getType(self):
        return _mega.MegaEvent_getType(self)

    def getText(self):
        return _mega.MegaEvent_getText(self)

    def getNumber(self):
        return _mega.MegaEvent_getNumber(self)

    def getHandle(self):
        return _mega.MegaEvent_getHandle(self)

    def getEventString(self):
        return _mega.MegaEvent_getEventString(self)

    def __init__(self):
        _mega.MegaEvent_swiginit(self, _mega.new_MegaEvent())

# Register MegaEvent in _mega:
_mega.MegaEvent_swigregister(MegaEvent)

class MegaTransfer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TYPE_DOWNLOAD = _mega.MegaTransfer_TYPE_DOWNLOAD
    TYPE_UPLOAD = _mega.MegaTransfer_TYPE_UPLOAD
    TYPE_LOCAL_TCP_DOWNLOAD = _mega.MegaTransfer_TYPE_LOCAL_TCP_DOWNLOAD
    TYPE_LOCAL_HTTP_DOWNLOAD = _mega.MegaTransfer_TYPE_LOCAL_HTTP_DOWNLOAD
    STATE_NONE = _mega.MegaTransfer_STATE_NONE
    STATE_QUEUED = _mega.MegaTransfer_STATE_QUEUED
    STATE_ACTIVE = _mega.MegaTransfer_STATE_ACTIVE
    STATE_PAUSED = _mega.MegaTransfer_STATE_PAUSED
    STATE_RETRYING = _mega.MegaTransfer_STATE_RETRYING
    STATE_COMPLETING = _mega.MegaTransfer_STATE_COMPLETING
    STATE_COMPLETED = _mega.MegaTransfer_STATE_COMPLETED
    STATE_CANCELLED = _mega.MegaTransfer_STATE_CANCELLED
    STATE_FAILED = _mega.MegaTransfer_STATE_FAILED
    MOVE_TYPE_UP = _mega.MegaTransfer_MOVE_TYPE_UP
    MOVE_TYPE_DOWN = _mega.MegaTransfer_MOVE_TYPE_DOWN
    MOVE_TYPE_TOP = _mega.MegaTransfer_MOVE_TYPE_TOP
    MOVE_TYPE_BOTTOM = _mega.MegaTransfer_MOVE_TYPE_BOTTOM
    __swig_destroy__ = _mega.delete_MegaTransfer

    def copy(self):
        return _mega.MegaTransfer_copy(self)

    def getType(self):
        return _mega.MegaTransfer_getType(self)

    def getTransferString(self):
        return _mega.MegaTransfer_getTransferString(self)

    def toString(self):
        return _mega.MegaTransfer_toString(self)

    def __str__(self):
        return _mega.MegaTransfer___str__(self)

    def __toString(self):
        return _mega.MegaTransfer___toString(self)

    def getStartTime(self):
        return _mega.MegaTransfer_getStartTime(self)

    def getTransferredBytes(self):
        return _mega.MegaTransfer_getTransferredBytes(self)

    def getTotalBytes(self):
        return _mega.MegaTransfer_getTotalBytes(self)

    def getPath(self):
        return _mega.MegaTransfer_getPath(self)

    def getParentPath(self):
        return _mega.MegaTransfer_getParentPath(self)

    def getNodeHandle(self):
        return _mega.MegaTransfer_getNodeHandle(self)

    def getParentHandle(self):
        return _mega.MegaTransfer_getParentHandle(self)

    def getStartPos(self):
        return _mega.MegaTransfer_getStartPos(self)

    def getEndPos(self):
        return _mega.MegaTransfer_getEndPos(self)

    def getFileName(self):
        return _mega.MegaTransfer_getFileName(self)

    def getNumRetry(self):
        return _mega.MegaTransfer_getNumRetry(self)

    def getMaxRetries(self):
        return _mega.MegaTransfer_getMaxRetries(self)

    def getTag(self):
        return _mega.MegaTransfer_getTag(self)

    def getSpeed(self):
        return _mega.MegaTransfer_getSpeed(self)

    def getMeanSpeed(self):
        return _mega.MegaTransfer_getMeanSpeed(self)

    def getDeltaSize(self):
        return _mega.MegaTransfer_getDeltaSize(self)

    def getUpdateTime(self):
        return _mega.MegaTransfer_getUpdateTime(self)

    def getPublicMegaNode(self):
        return _mega.MegaTransfer_getPublicMegaNode(self)

    def isSyncTransfer(self):
        return _mega.MegaTransfer_isSyncTransfer(self)

    def isBackupTransfer(self):
        return _mega.MegaTransfer_isBackupTransfer(self)

    def isForeignOverquota(self):
        return _mega.MegaTransfer_isForeignOverquota(self)

    def isForceNewUpload(self):
        return _mega.MegaTransfer_isForceNewUpload(self)

    def isStreamingTransfer(self):
        return _mega.MegaTransfer_isStreamingTransfer(self)

    def isFinished(self):
        return _mega.MegaTransfer_isFinished(self)

    def getLastBytes(self):
        return _mega.MegaTransfer_getLastBytes(self)

    def getLastError(self):
        return _mega.MegaTransfer_getLastError(self)

    def getLastErrorExtended(self):
        return _mega.MegaTransfer_getLastErrorExtended(self)

    def isFolderTransfer(self):
        return _mega.MegaTransfer_isFolderTransfer(self)

    def getFolderTransferTag(self):
        return _mega.MegaTransfer_getFolderTransferTag(self)

    def getAppData(self):
        return _mega.MegaTransfer_getAppData(self)

    def getState(self):
        return _mega.MegaTransfer_getState(self)

    def getPriority(self):
        return _mega.MegaTransfer_getPriority(self)

    def getNotificationNumber(self):
        return _mega.MegaTransfer_getNotificationNumber(self)

    def getTargetOverride(self):
        return _mega.MegaTransfer_getTargetOverride(self)

    def __init__(self):
        _mega.MegaTransfer_swiginit(self, _mega.new_MegaTransfer())

# Register MegaTransfer in _mega:
_mega.MegaTransfer_swigregister(MegaTransfer)

class MegaFolderInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaFolderInfo

    def copy(self):
        return _mega.MegaFolderInfo_copy(self)

    def getNumVersions(self):
        return _mega.MegaFolderInfo_getNumVersions(self)

    def getNumFiles(self):
        return _mega.MegaFolderInfo_getNumFiles(self)

    def getNumFolders(self):
        return _mega.MegaFolderInfo_getNumFolders(self)

    def getCurrentSize(self):
        return _mega.MegaFolderInfo_getCurrentSize(self)

    def getVersionsSize(self):
        return _mega.MegaFolderInfo_getVersionsSize(self)

    def __init__(self):
        _mega.MegaFolderInfo_swiginit(self, _mega.new_MegaFolderInfo())

# Register MegaFolderInfo in _mega:
_mega.MegaFolderInfo_swigregister(MegaFolderInfo)

class MegaTimeZoneDetails(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaTimeZoneDetails

    def copy(self):
        return _mega.MegaTimeZoneDetails_copy(self)

    def getNumTimeZones(self):
        return _mega.MegaTimeZoneDetails_getNumTimeZones(self)

    def getTimeZone(self, index):
        return _mega.MegaTimeZoneDetails_getTimeZone(self, index)

    def getTimeOffset(self, index):
        return _mega.MegaTimeZoneDetails_getTimeOffset(self, index)

    def getDefault(self):
        return _mega.MegaTimeZoneDetails_getDefault(self)

    def __init__(self):
        _mega.MegaTimeZoneDetails_swiginit(self, _mega.new_MegaTimeZoneDetails())

# Register MegaTimeZoneDetails in _mega:
_mega.MegaTimeZoneDetails_swigregister(MegaTimeZoneDetails)

class MegaPushNotificationSettings(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaPushNotificationSettings_createInstance()
    __swig_destroy__ = _mega.delete_MegaPushNotificationSettings

    def copy(self):
        return _mega.MegaPushNotificationSettings_copy(self)

    def isGlobalEnabled(self):
        return _mega.MegaPushNotificationSettings_isGlobalEnabled(self)

    def isGlobalDndEnabled(self):
        return _mega.MegaPushNotificationSettings_isGlobalDndEnabled(self)

    def isGlobalChatsDndEnabled(self):
        return _mega.MegaPushNotificationSettings_isGlobalChatsDndEnabled(self)

    def getGlobalDnd(self):
        return _mega.MegaPushNotificationSettings_getGlobalDnd(self)

    def isGlobalScheduleEnabled(self):
        return _mega.MegaPushNotificationSettings_isGlobalScheduleEnabled(self)

    def getGlobalScheduleStart(self):
        return _mega.MegaPushNotificationSettings_getGlobalScheduleStart(self)

    def getGlobalScheduleEnd(self):
        return _mega.MegaPushNotificationSettings_getGlobalScheduleEnd(self)

    def getGlobalScheduleTimezone(self):
        return _mega.MegaPushNotificationSettings_getGlobalScheduleTimezone(self)

    def isChatEnabled(self, chatid):
        return _mega.MegaPushNotificationSettings_isChatEnabled(self, chatid)

    def isChatDndEnabled(self, chatid):
        return _mega.MegaPushNotificationSettings_isChatDndEnabled(self, chatid)

    def getChatDnd(self, chatid):
        return _mega.MegaPushNotificationSettings_getChatDnd(self, chatid)

    def isChatAlwaysNotifyEnabled(self, chatid):
        return _mega.MegaPushNotificationSettings_isChatAlwaysNotifyEnabled(self, chatid)

    def isContactsEnabled(self):
        return _mega.MegaPushNotificationSettings_isContactsEnabled(self)

    def isSharesEnabled(self):
        return _mega.MegaPushNotificationSettings_isSharesEnabled(self)

    def isChatsEnabled(self):
        return _mega.MegaPushNotificationSettings_isChatsEnabled(self)

    def getGlobalChatsDnd(self):
        return _mega.MegaPushNotificationSettings_getGlobalChatsDnd(self)

    def enableGlobal(self, enable):
        return _mega.MegaPushNotificationSettings_enableGlobal(self, enable)

    def setGlobalDnd(self, timestamp):
        return _mega.MegaPushNotificationSettings_setGlobalDnd(self, timestamp)

    def disableGlobalDnd(self):
        return _mega.MegaPushNotificationSettings_disableGlobalDnd(self)

    def setGlobalSchedule(self, start, end, timezone):
        return _mega.MegaPushNotificationSettings_setGlobalSchedule(self, start, end, timezone)

    def disableGlobalSchedule(self):
        return _mega.MegaPushNotificationSettings_disableGlobalSchedule(self)

    def enableChat(self, chatid, enable):
        return _mega.MegaPushNotificationSettings_enableChat(self, chatid, enable)

    def setChatDnd(self, chatid, timestamp):
        return _mega.MegaPushNotificationSettings_setChatDnd(self, chatid, timestamp)

    def setGlobalChatsDnd(self, timestamp):
        return _mega.MegaPushNotificationSettings_setGlobalChatsDnd(self, timestamp)

    def enableChatAlwaysNotify(self, chatid, enable):
        return _mega.MegaPushNotificationSettings_enableChatAlwaysNotify(self, chatid, enable)

    def enableContacts(self, enable):
        return _mega.MegaPushNotificationSettings_enableContacts(self, enable)

    def enableShares(self, enable):
        return _mega.MegaPushNotificationSettings_enableShares(self, enable)

    def enableChats(self, enable):
        return _mega.MegaPushNotificationSettings_enableChats(self, enable)

# Register MegaPushNotificationSettings in _mega:
_mega.MegaPushNotificationSettings_swigregister(MegaPushNotificationSettings)

def MegaPushNotificationSettings_createInstance():
    return _mega.MegaPushNotificationSettings_createInstance()

class MegaTransferData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaTransferData

    def copy(self):
        return _mega.MegaTransferData_copy(self)

    def getNumDownloads(self):
        return _mega.MegaTransferData_getNumDownloads(self)

    def getNumUploads(self):
        return _mega.MegaTransferData_getNumUploads(self)

    def getDownloadTag(self, i):
        return _mega.MegaTransferData_getDownloadTag(self, i)

    def getUploadTag(self, i):
        return _mega.MegaTransferData_getUploadTag(self, i)

    def getDownloadPriority(self, i):
        return _mega.MegaTransferData_getDownloadPriority(self, i)

    def getUploadPriority(self, i):
        return _mega.MegaTransferData_getUploadPriority(self, i)

    def getNotificationNumber(self):
        return _mega.MegaTransferData_getNotificationNumber(self)

    def __init__(self):
        _mega.MegaTransferData_swiginit(self, _mega.new_MegaTransferData())

# Register MegaTransferData in _mega:
_mega.MegaTransferData_swigregister(MegaTransferData)

class MegaContactRequest(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STATUS_UNRESOLVED = _mega.MegaContactRequest_STATUS_UNRESOLVED
    STATUS_ACCEPTED = _mega.MegaContactRequest_STATUS_ACCEPTED
    STATUS_DENIED = _mega.MegaContactRequest_STATUS_DENIED
    STATUS_IGNORED = _mega.MegaContactRequest_STATUS_IGNORED
    STATUS_DELETED = _mega.MegaContactRequest_STATUS_DELETED
    STATUS_REMINDED = _mega.MegaContactRequest_STATUS_REMINDED
    REPLY_ACTION_ACCEPT = _mega.MegaContactRequest_REPLY_ACTION_ACCEPT
    REPLY_ACTION_DENY = _mega.MegaContactRequest_REPLY_ACTION_DENY
    REPLY_ACTION_IGNORE = _mega.MegaContactRequest_REPLY_ACTION_IGNORE
    INVITE_ACTION_ADD = _mega.MegaContactRequest_INVITE_ACTION_ADD
    INVITE_ACTION_DELETE = _mega.MegaContactRequest_INVITE_ACTION_DELETE
    INVITE_ACTION_REMIND = _mega.MegaContactRequest_INVITE_ACTION_REMIND
    __swig_destroy__ = _mega.delete_MegaContactRequest

    def copy(self):
        return _mega.MegaContactRequest_copy(self)

    def getHandle(self):
        return _mega.MegaContactRequest_getHandle(self)

    def getSourceEmail(self):
        return _mega.MegaContactRequest_getSourceEmail(self)

    def getSourceMessage(self):
        return _mega.MegaContactRequest_getSourceMessage(self)

    def getTargetEmail(self):
        return _mega.MegaContactRequest_getTargetEmail(self)

    def getCreationTime(self):
        return _mega.MegaContactRequest_getCreationTime(self)

    def getModificationTime(self):
        return _mega.MegaContactRequest_getModificationTime(self)

    def getStatus(self):
        return _mega.MegaContactRequest_getStatus(self)

    def isOutgoing(self):
        return _mega.MegaContactRequest_isOutgoing(self)

    def isAutoAccepted(self):
        return _mega.MegaContactRequest_isAutoAccepted(self)

    def __init__(self):
        _mega.MegaContactRequest_swiginit(self, _mega.new_MegaContactRequest())

# Register MegaContactRequest in _mega:
_mega.MegaContactRequest_swigregister(MegaContactRequest)

class MegaBackupListener(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaBackupListener

    def onBackupStateChanged(self, api, backup):
        return _mega.MegaBackupListener_onBackupStateChanged(self, api, backup)

    def onBackupStart(self, api, backup):
        return _mega.MegaBackupListener_onBackupStart(self, api, backup)

    def onBackupFinish(self, api, backup, error):
        return _mega.MegaBackupListener_onBackupFinish(self, api, backup, error)

    def onBackupUpdate(self, api, backup):
        return _mega.MegaBackupListener_onBackupUpdate(self, api, backup)

    def onBackupTemporaryError(self, api, backup, error):
        return _mega.MegaBackupListener_onBackupTemporaryError(self, api, backup, error)

    def __init__(self):
        _mega.MegaBackupListener_swiginit(self, _mega.new_MegaBackupListener())

# Register MegaBackupListener in _mega:
_mega.MegaBackupListener_swigregister(MegaBackupListener)

class MegaBackup(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BACKUP_FAILED = _mega.MegaBackup_BACKUP_FAILED
    BACKUP_CANCELED = _mega.MegaBackup_BACKUP_CANCELED
    BACKUP_INITIALSCAN = _mega.MegaBackup_BACKUP_INITIALSCAN
    BACKUP_ACTIVE = _mega.MegaBackup_BACKUP_ACTIVE
    BACKUP_ONGOING = _mega.MegaBackup_BACKUP_ONGOING
    BACKUP_SKIPPING = _mega.MegaBackup_BACKUP_SKIPPING
    BACKUP_REMOVING_EXCEEDING = _mega.MegaBackup_BACKUP_REMOVING_EXCEEDING
    __swig_destroy__ = _mega.delete_MegaBackup

    def copy(self):
        return _mega.MegaBackup_copy(self)

    def getMegaHandle(self):
        return _mega.MegaBackup_getMegaHandle(self)

    def getLocalFolder(self):
        return _mega.MegaBackup_getLocalFolder(self)

    def getTag(self):
        return _mega.MegaBackup_getTag(self)

    def getAttendPastBackups(self):
        return _mega.MegaBackup_getAttendPastBackups(self)

    def getPeriod(self):
        return _mega.MegaBackup_getPeriod(self)

    def getPeriodString(self):
        return _mega.MegaBackup_getPeriodString(self)

    def getNextStartTime(self, oldStartTimeAbsolute=-1):
        return _mega.MegaBackup_getNextStartTime(self, oldStartTimeAbsolute)

    def getMaxBackups(self):
        return _mega.MegaBackup_getMaxBackups(self)

    def getState(self):
        return _mega.MegaBackup_getState(self)

    def getNumberFolders(self):
        return _mega.MegaBackup_getNumberFolders(self)

    def getNumberFiles(self):
        return _mega.MegaBackup_getNumberFiles(self)

    def getTotalFiles(self):
        return _mega.MegaBackup_getTotalFiles(self)

    def getCurrentBKStartTime(self):
        return _mega.MegaBackup_getCurrentBKStartTime(self)

    def getTransferredBytes(self):
        return _mega.MegaBackup_getTransferredBytes(self)

    def getTotalBytes(self):
        return _mega.MegaBackup_getTotalBytes(self)

    def getSpeed(self):
        return _mega.MegaBackup_getSpeed(self)

    def getMeanSpeed(self):
        return _mega.MegaBackup_getMeanSpeed(self)

    def getUpdateTime(self):
        return _mega.MegaBackup_getUpdateTime(self)

    def getFailedTransfers(self):
        return _mega.MegaBackup_getFailedTransfers(self)

    def __init__(self):
        _mega.MegaBackup_swiginit(self, _mega.new_MegaBackup())

# Register MegaBackup in _mega:
_mega.MegaBackup_swigregister(MegaBackup)

class MegaError(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    API_OK = _mega.MegaError_API_OK
    API_EINTERNAL = _mega.MegaError_API_EINTERNAL
    API_EARGS = _mega.MegaError_API_EARGS
    API_EAGAIN = _mega.MegaError_API_EAGAIN
    API_ERATELIMIT = _mega.MegaError_API_ERATELIMIT
    API_EFAILED = _mega.MegaError_API_EFAILED
    API_ETOOMANY = _mega.MegaError_API_ETOOMANY
    API_ERANGE = _mega.MegaError_API_ERANGE
    API_EEXPIRED = _mega.MegaError_API_EEXPIRED
    API_ENOENT = _mega.MegaError_API_ENOENT
    API_ECIRCULAR = _mega.MegaError_API_ECIRCULAR
    API_EACCESS = _mega.MegaError_API_EACCESS
    API_EEXIST = _mega.MegaError_API_EEXIST
    API_EINCOMPLETE = _mega.MegaError_API_EINCOMPLETE
    API_EKEY = _mega.MegaError_API_EKEY
    API_ESID = _mega.MegaError_API_ESID
    API_EBLOCKED = _mega.MegaError_API_EBLOCKED
    API_EOVERQUOTA = _mega.MegaError_API_EOVERQUOTA
    API_ETEMPUNAVAIL = _mega.MegaError_API_ETEMPUNAVAIL
    API_ETOOMANYCONNECTIONS = _mega.MegaError_API_ETOOMANYCONNECTIONS
    API_EWRITE = _mega.MegaError_API_EWRITE
    API_EREAD = _mega.MegaError_API_EREAD
    API_EAPPKEY = _mega.MegaError_API_EAPPKEY
    API_ESSL = _mega.MegaError_API_ESSL
    API_EGOINGOVERQUOTA = _mega.MegaError_API_EGOINGOVERQUOTA
    API_EMFAREQUIRED = _mega.MegaError_API_EMFAREQUIRED
    API_EMASTERONLY = _mega.MegaError_API_EMASTERONLY
    API_EBUSINESSPASTDUE = _mega.MegaError_API_EBUSINESSPASTDUE
    API_EPAYWALL = _mega.MegaError_API_EPAYWALL
    PAYMENT_ECARD = _mega.MegaError_PAYMENT_ECARD
    PAYMENT_EBILLING = _mega.MegaError_PAYMENT_EBILLING
    PAYMENT_EFRAUD = _mega.MegaError_PAYMENT_EFRAUD
    PAYMENT_ETOOMANY = _mega.MegaError_PAYMENT_ETOOMANY
    PAYMENT_EBALANCE = _mega.MegaError_PAYMENT_EBALANCE
    PAYMENT_EGENERIC = _mega.MegaError_PAYMENT_EGENERIC
    API_EC_DEFAULT = _mega.MegaError_API_EC_DEFAULT
    API_EC_DOWNLOAD = _mega.MegaError_API_EC_DOWNLOAD
    API_EC_IMPORT = _mega.MegaError_API_EC_IMPORT
    API_EC_UPLOAD = _mega.MegaError_API_EC_UPLOAD
    USER_ETD_UNKNOWN = _mega.MegaError_USER_ETD_UNKNOWN
    USER_COPYRIGHT_SUSPENSION = _mega.MegaError_USER_COPYRIGHT_SUSPENSION
    USER_ETD_SUSPENSION = _mega.MegaError_USER_ETD_SUSPENSION
    LINK_UNKNOWN = _mega.MegaError_LINK_UNKNOWN
    LINK_UNDELETED = _mega.MegaError_LINK_UNDELETED
    LINK_DELETED_DOWN = _mega.MegaError_LINK_DELETED_DOWN
    LINK_DOWN_ETD = _mega.MegaError_LINK_DOWN_ETD
    __swig_destroy__ = _mega.delete_MegaError

    def copy(self):
        return _mega.MegaError_copy(self)

    def getErrorCode(self):
        return _mega.MegaError_getErrorCode(self)

    def getValue(self):
        return _mega.MegaError_getValue(self)

    def hasExtraInfo(self):
        return _mega.MegaError_hasExtraInfo(self)

    def getUserStatus(self):
        return _mega.MegaError_getUserStatus(self)

    def getLinkStatus(self):
        return _mega.MegaError_getLinkStatus(self)

    def toString(self):
        return _mega.MegaError_toString(self)

    def __str__(self):
        return _mega.MegaError___str__(self)

    def __toString(self):
        return _mega.MegaError___toString(self)

    @staticmethod
    def getErrorString(*args):
        return _mega.MegaError_getErrorString(*args)

# Register MegaError in _mega:
_mega.MegaError_swigregister(MegaError)

def MegaError_getErrorString(*args):
    return _mega.MegaError_getErrorString(*args)

class MegaTreeProcessor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def processMegaNode(self, node):
        return _mega.MegaTreeProcessor_processMegaNode(self, node)
    __swig_destroy__ = _mega.delete_MegaTreeProcessor

    def __init__(self):
        if self.__class__ == MegaTreeProcessor:
            _self = None
        else:
            _self = self
        _mega.MegaTreeProcessor_swiginit(self, _mega.new_MegaTreeProcessor(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaTreeProcessor(self)
        return weakref.proxy(self)

# Register MegaTreeProcessor in _mega:
_mega.MegaTreeProcessor_swigregister(MegaTreeProcessor)

class MegaRequestListener(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def onRequestStart(self, api, request):
        return _mega.MegaRequestListener_onRequestStart(self, api, request)

    def onRequestFinish(self, api, request, e):
        return _mega.MegaRequestListener_onRequestFinish(self, api, request, e)

    def onRequestUpdate(self, api, request):
        return _mega.MegaRequestListener_onRequestUpdate(self, api, request)

    def onRequestTemporaryError(self, api, request, error):
        return _mega.MegaRequestListener_onRequestTemporaryError(self, api, request, error)
    __swig_destroy__ = _mega.delete_MegaRequestListener

    def __init__(self):
        if self.__class__ == MegaRequestListener:
            _self = None
        else:
            _self = self
        _mega.MegaRequestListener_swiginit(self, _mega.new_MegaRequestListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaRequestListener(self)
        return weakref.proxy(self)

# Register MegaRequestListener in _mega:
_mega.MegaRequestListener_swigregister(MegaRequestListener)

class MegaTransferListener(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def onTransferStart(self, api, transfer):
        return _mega.MegaTransferListener_onTransferStart(self, api, transfer)

    def onTransferFinish(self, api, transfer, error):
        return _mega.MegaTransferListener_onTransferFinish(self, api, transfer, error)

    def onTransferUpdate(self, api, transfer):
        return _mega.MegaTransferListener_onTransferUpdate(self, api, transfer)

    def onTransferTemporaryError(self, api, transfer, error):
        return _mega.MegaTransferListener_onTransferTemporaryError(self, api, transfer, error)
    __swig_destroy__ = _mega.delete_MegaTransferListener

    def onTransferData(self, api, transfer, buffer, size):
        return _mega.MegaTransferListener_onTransferData(self, api, transfer, buffer, size)

    def __init__(self):
        if self.__class__ == MegaTransferListener:
            _self = None
        else:
            _self = self
        _mega.MegaTransferListener_swiginit(self, _mega.new_MegaTransferListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaTransferListener(self)
        return weakref.proxy(self)

# Register MegaTransferListener in _mega:
_mega.MegaTransferListener_swigregister(MegaTransferListener)

class MegaGlobalListener(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def onUsersUpdate(self, api, users):
        return _mega.MegaGlobalListener_onUsersUpdate(self, api, users)

    def onUserAlertsUpdate(self, api, alerts):
        return _mega.MegaGlobalListener_onUserAlertsUpdate(self, api, alerts)

    def onNodesUpdate(self, api, nodes):
        return _mega.MegaGlobalListener_onNodesUpdate(self, api, nodes)

    def onAccountUpdate(self, api):
        return _mega.MegaGlobalListener_onAccountUpdate(self, api)

    def onContactRequestsUpdate(self, api, requests):
        return _mega.MegaGlobalListener_onContactRequestsUpdate(self, api, requests)

    def onReloadNeeded(self, api):
        return _mega.MegaGlobalListener_onReloadNeeded(self, api)

    def onChatsUpdate(self, api, chats):
        return _mega.MegaGlobalListener_onChatsUpdate(self, api, chats)

    def onEvent(self, api, event):
        return _mega.MegaGlobalListener_onEvent(self, api, event)
    __swig_destroy__ = _mega.delete_MegaGlobalListener

    def __init__(self):
        if self.__class__ == MegaGlobalListener:
            _self = None
        else:
            _self = self
        _mega.MegaGlobalListener_swiginit(self, _mega.new_MegaGlobalListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaGlobalListener(self)
        return weakref.proxy(self)

# Register MegaGlobalListener in _mega:
_mega.MegaGlobalListener_swigregister(MegaGlobalListener)

class MegaListener(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def onRequestStart(self, api, request):
        return _mega.MegaListener_onRequestStart(self, api, request)

    def onRequestFinish(self, api, request, e):
        return _mega.MegaListener_onRequestFinish(self, api, request, e)

    def onRequestUpdate(self, api, request):
        return _mega.MegaListener_onRequestUpdate(self, api, request)

    def onRequestTemporaryError(self, api, request, error):
        return _mega.MegaListener_onRequestTemporaryError(self, api, request, error)

    def onTransferStart(self, api, transfer):
        return _mega.MegaListener_onTransferStart(self, api, transfer)

    def onTransferFinish(self, api, transfer, error):
        return _mega.MegaListener_onTransferFinish(self, api, transfer, error)

    def onTransferUpdate(self, api, transfer):
        return _mega.MegaListener_onTransferUpdate(self, api, transfer)

    def onTransferTemporaryError(self, api, transfer, error):
        return _mega.MegaListener_onTransferTemporaryError(self, api, transfer, error)

    def onUsersUpdate(self, api, users):
        return _mega.MegaListener_onUsersUpdate(self, api, users)

    def onUserAlertsUpdate(self, api, alerts):
        return _mega.MegaListener_onUserAlertsUpdate(self, api, alerts)

    def onNodesUpdate(self, api, nodes):
        return _mega.MegaListener_onNodesUpdate(self, api, nodes)

    def onAccountUpdate(self, api):
        return _mega.MegaListener_onAccountUpdate(self, api)

    def onContactRequestsUpdate(self, api, requests):
        return _mega.MegaListener_onContactRequestsUpdate(self, api, requests)

    def onReloadNeeded(self, api):
        return _mega.MegaListener_onReloadNeeded(self, api)

    def onBackupStateChanged(self, api, backup):
        return _mega.MegaListener_onBackupStateChanged(self, api, backup)

    def onBackupStart(self, api, backup):
        return _mega.MegaListener_onBackupStart(self, api, backup)

    def onBackupFinish(self, api, backup, error):
        return _mega.MegaListener_onBackupFinish(self, api, backup, error)

    def onBackupUpdate(self, api, backup):
        return _mega.MegaListener_onBackupUpdate(self, api, backup)

    def onBackupTemporaryError(self, api, backup, error):
        return _mega.MegaListener_onBackupTemporaryError(self, api, backup, error)

    def onChatsUpdate(self, api, chats):
        return _mega.MegaListener_onChatsUpdate(self, api, chats)

    def onEvent(self, api, event):
        return _mega.MegaListener_onEvent(self, api, event)
    __swig_destroy__ = _mega.delete_MegaListener

    def __init__(self):
        if self.__class__ == MegaListener:
            _self = None
        else:
            _self = self
        _mega.MegaListener_swiginit(self, _mega.new_MegaListener(_self, ))
    def __disown__(self):
        self.this.disown()
        _mega.disown_MegaListener(self)
        return weakref.proxy(self)

# Register MegaListener in _mega:
_mega.MegaListener_swigregister(MegaListener)

class MegaBackgroundMediaUpload(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance(api):
        return _mega.MegaBackgroundMediaUpload_createInstance(api)

    def analyseMediaInfo(self, inputFilepath):
        return _mega.MegaBackgroundMediaUpload_analyseMediaInfo(self, inputFilepath)

    def encryptFile(self, inputFilepath, startPos, length, outputFilepath, adjustsizeonly):
        return _mega.MegaBackgroundMediaUpload_encryptFile(self, inputFilepath, startPos, length, outputFilepath, adjustsizeonly)

    def getUploadURL(self):
        return _mega.MegaBackgroundMediaUpload_getUploadURL(self)

    def setThumbnail(self, h):
        return _mega.MegaBackgroundMediaUpload_setThumbnail(self, h)

    def setPreview(self, h):
        return _mega.MegaBackgroundMediaUpload_setPreview(self, h)

    def setCoordinates(self, latitude, longitude, unshareable):
        return _mega.MegaBackgroundMediaUpload_setCoordinates(self, latitude, longitude, unshareable)

    def serialize(self):
        return _mega.MegaBackgroundMediaUpload_serialize(self)

    @staticmethod
    def unserialize(data, api):
        return _mega.MegaBackgroundMediaUpload_unserialize(data, api)
    __swig_destroy__ = _mega.delete_MegaBackgroundMediaUpload

# Register MegaBackgroundMediaUpload in _mega:
_mega.MegaBackgroundMediaUpload_swigregister(MegaBackgroundMediaUpload)

def MegaBackgroundMediaUpload_createInstance(api):
    return _mega.MegaBackgroundMediaUpload_createInstance(api)

def MegaBackgroundMediaUpload_unserialize(data, api):
    return _mega.MegaBackgroundMediaUpload_unserialize(data, api)

class MegaInputStream(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def getSize(self):
        return _mega.MegaInputStream_getSize(self)

    def read(self, buffer, size):
        return _mega.MegaInputStream_read(self, buffer, size)
    __swig_destroy__ = _mega.delete_MegaInputStream

    def __init__(self):
        _mega.MegaInputStream_swiginit(self, _mega.new_MegaInputStream())

# Register MegaInputStream in _mega:
_mega.MegaInputStream_swigregister(MegaInputStream)

class MegaApiLock(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def lockOnce(self):
        return _mega.MegaApiLock_lockOnce(self)

    def tryLockFor(self, time):
        return _mega.MegaApiLock_tryLockFor(self, time)

    def unlockOnce(self):
        return _mega.MegaApiLock_unlockOnce(self)
    __swig_destroy__ = _mega.delete_MegaApiLock

# Register MegaApiLock in _mega:
_mega.MegaApiLock_swigregister(MegaApiLock)

class MegaApi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STATE_NONE = _mega.MegaApi_STATE_NONE
    STATE_SYNCED = _mega.MegaApi_STATE_SYNCED
    STATE_PENDING = _mega.MegaApi_STATE_PENDING
    STATE_SYNCING = _mega.MegaApi_STATE_SYNCING
    STATE_IGNORED = _mega.MegaApi_STATE_IGNORED
    LOG_LEVEL_FATAL = _mega.MegaApi_LOG_LEVEL_FATAL
    LOG_LEVEL_ERROR = _mega.MegaApi_LOG_LEVEL_ERROR
    LOG_LEVEL_WARNING = _mega.MegaApi_LOG_LEVEL_WARNING
    LOG_LEVEL_INFO = _mega.MegaApi_LOG_LEVEL_INFO
    LOG_LEVEL_DEBUG = _mega.MegaApi_LOG_LEVEL_DEBUG
    LOG_LEVEL_MAX = _mega.MegaApi_LOG_LEVEL_MAX
    ATTR_TYPE_THUMBNAIL = _mega.MegaApi_ATTR_TYPE_THUMBNAIL
    ATTR_TYPE_PREVIEW = _mega.MegaApi_ATTR_TYPE_PREVIEW
    USER_ATTR_UNKNOWN = _mega.MegaApi_USER_ATTR_UNKNOWN
    USER_ATTR_AVATAR = _mega.MegaApi_USER_ATTR_AVATAR
    USER_ATTR_FIRSTNAME = _mega.MegaApi_USER_ATTR_FIRSTNAME
    USER_ATTR_LASTNAME = _mega.MegaApi_USER_ATTR_LASTNAME
    USER_ATTR_AUTHRING = _mega.MegaApi_USER_ATTR_AUTHRING
    USER_ATTR_LAST_INTERACTION = _mega.MegaApi_USER_ATTR_LAST_INTERACTION
    USER_ATTR_ED25519_PUBLIC_KEY = _mega.MegaApi_USER_ATTR_ED25519_PUBLIC_KEY
    USER_ATTR_CU25519_PUBLIC_KEY = _mega.MegaApi_USER_ATTR_CU25519_PUBLIC_KEY
    USER_ATTR_KEYRING = _mega.MegaApi_USER_ATTR_KEYRING
    USER_ATTR_SIG_RSA_PUBLIC_KEY = _mega.MegaApi_USER_ATTR_SIG_RSA_PUBLIC_KEY
    USER_ATTR_SIG_CU255_PUBLIC_KEY = _mega.MegaApi_USER_ATTR_SIG_CU255_PUBLIC_KEY
    USER_ATTR_LANGUAGE = _mega.MegaApi_USER_ATTR_LANGUAGE
    USER_ATTR_PWD_REMINDER = _mega.MegaApi_USER_ATTR_PWD_REMINDER
    USER_ATTR_DISABLE_VERSIONS = _mega.MegaApi_USER_ATTR_DISABLE_VERSIONS
    USER_ATTR_CONTACT_LINK_VERIFICATION = _mega.MegaApi_USER_ATTR_CONTACT_LINK_VERIFICATION
    USER_ATTR_RICH_PREVIEWS = _mega.MegaApi_USER_ATTR_RICH_PREVIEWS
    USER_ATTR_RUBBISH_TIME = _mega.MegaApi_USER_ATTR_RUBBISH_TIME
    USER_ATTR_LAST_PSA = _mega.MegaApi_USER_ATTR_LAST_PSA
    USER_ATTR_STORAGE_STATE = _mega.MegaApi_USER_ATTR_STORAGE_STATE
    USER_ATTR_GEOLOCATION = _mega.MegaApi_USER_ATTR_GEOLOCATION
    USER_ATTR_CAMERA_UPLOADS_FOLDER = _mega.MegaApi_USER_ATTR_CAMERA_UPLOADS_FOLDER
    USER_ATTR_MY_CHAT_FILES_FOLDER = _mega.MegaApi_USER_ATTR_MY_CHAT_FILES_FOLDER
    USER_ATTR_PUSH_SETTINGS = _mega.MegaApi_USER_ATTR_PUSH_SETTINGS
    USER_ATTR_ALIAS = _mega.MegaApi_USER_ATTR_ALIAS
    USER_ATTR_DEVICE_NAMES = _mega.MegaApi_USER_ATTR_DEVICE_NAMES
    USER_ATTR_MY_BACKUPS_FOLDER = _mega.MegaApi_USER_ATTR_MY_BACKUPS_FOLDER
    USER_ATTR_BACKUP_NAMES = _mega.MegaApi_USER_ATTR_BACKUP_NAMES
    USER_ATTR_COOKIE_SETTINGS = _mega.MegaApi_USER_ATTR_COOKIE_SETTINGS
    USER_ATTR_JSON_SYNC_CONFIG_DATA = _mega.MegaApi_USER_ATTR_JSON_SYNC_CONFIG_DATA
    NODE_ATTR_DURATION = _mega.MegaApi_NODE_ATTR_DURATION
    NODE_ATTR_COORDINATES = _mega.MegaApi_NODE_ATTR_COORDINATES
    NODE_ATTR_ORIGINALFINGERPRINT = _mega.MegaApi_NODE_ATTR_ORIGINALFINGERPRINT
    NODE_ATTR_LABEL = _mega.MegaApi_NODE_ATTR_LABEL
    NODE_ATTR_FAV = _mega.MegaApi_NODE_ATTR_FAV
    PAYMENT_METHOD_BALANCE = _mega.MegaApi_PAYMENT_METHOD_BALANCE
    PAYMENT_METHOD_PAYPAL = _mega.MegaApi_PAYMENT_METHOD_PAYPAL
    PAYMENT_METHOD_ITUNES = _mega.MegaApi_PAYMENT_METHOD_ITUNES
    PAYMENT_METHOD_GOOGLE_WALLET = _mega.MegaApi_PAYMENT_METHOD_GOOGLE_WALLET
    PAYMENT_METHOD_HUAWEI_WALLET = _mega.MegaApi_PAYMENT_METHOD_HUAWEI_WALLET
    PAYMENT_METHOD_BITCOIN = _mega.MegaApi_PAYMENT_METHOD_BITCOIN
    PAYMENT_METHOD_UNIONPAY = _mega.MegaApi_PAYMENT_METHOD_UNIONPAY
    PAYMENT_METHOD_FORTUMO = _mega.MegaApi_PAYMENT_METHOD_FORTUMO
    PAYMENT_METHOD_CREDIT_CARD = _mega.MegaApi_PAYMENT_METHOD_CREDIT_CARD
    PAYMENT_METHOD_CENTILI = _mega.MegaApi_PAYMENT_METHOD_CENTILI
    PAYMENT_METHOD_WINDOWS_STORE = _mega.MegaApi_PAYMENT_METHOD_WINDOWS_STORE
    TRANSFER_METHOD_NORMAL = _mega.MegaApi_TRANSFER_METHOD_NORMAL
    TRANSFER_METHOD_ALTERNATIVE_PORT = _mega.MegaApi_TRANSFER_METHOD_ALTERNATIVE_PORT
    TRANSFER_METHOD_AUTO = _mega.MegaApi_TRANSFER_METHOD_AUTO
    TRANSFER_METHOD_AUTO_NORMAL = _mega.MegaApi_TRANSFER_METHOD_AUTO_NORMAL
    TRANSFER_METHOD_AUTO_ALTERNATIVE = _mega.MegaApi_TRANSFER_METHOD_AUTO_ALTERNATIVE
    PUSH_NOTIFICATION_ANDROID = _mega.MegaApi_PUSH_NOTIFICATION_ANDROID
    PUSH_NOTIFICATION_IOS_VOIP = _mega.MegaApi_PUSH_NOTIFICATION_IOS_VOIP
    PUSH_NOTIFICATION_IOS_STD = _mega.MegaApi_PUSH_NOTIFICATION_IOS_STD
    PUSH_NOTIFICATION_ANDROID_HUAWEI = _mega.MegaApi_PUSH_NOTIFICATION_ANDROID_HUAWEI
    PASSWORD_STRENGTH_VERYWEAK = _mega.MegaApi_PASSWORD_STRENGTH_VERYWEAK
    PASSWORD_STRENGTH_WEAK = _mega.MegaApi_PASSWORD_STRENGTH_WEAK
    PASSWORD_STRENGTH_MEDIUM = _mega.MegaApi_PASSWORD_STRENGTH_MEDIUM
    PASSWORD_STRENGTH_GOOD = _mega.MegaApi_PASSWORD_STRENGTH_GOOD
    PASSWORD_STRENGTH_STRONG = _mega.MegaApi_PASSWORD_STRENGTH_STRONG
    RETRY_NONE = _mega.MegaApi_RETRY_NONE
    RETRY_CONNECTIVITY = _mega.MegaApi_RETRY_CONNECTIVITY
    RETRY_SERVERS_BUSY = _mega.MegaApi_RETRY_SERVERS_BUSY
    RETRY_API_LOCK = _mega.MegaApi_RETRY_API_LOCK
    RETRY_RATE_LIMIT = _mega.MegaApi_RETRY_RATE_LIMIT
    RETRY_LOCAL_LOCK = _mega.MegaApi_RETRY_LOCAL_LOCK
    RETRY_UNKNOWN = _mega.MegaApi_RETRY_UNKNOWN
    KEEP_ALIVE_CAMERA_UPLOADS = _mega.MegaApi_KEEP_ALIVE_CAMERA_UPLOADS
    STORAGE_STATE_UNKNOWN = _mega.MegaApi_STORAGE_STATE_UNKNOWN
    STORAGE_STATE_GREEN = _mega.MegaApi_STORAGE_STATE_GREEN
    STORAGE_STATE_ORANGE = _mega.MegaApi_STORAGE_STATE_ORANGE
    STORAGE_STATE_RED = _mega.MegaApi_STORAGE_STATE_RED
    STORAGE_STATE_CHANGE = _mega.MegaApi_STORAGE_STATE_CHANGE
    STORAGE_STATE_PAYWALL = _mega.MegaApi_STORAGE_STATE_PAYWALL
    BUSINESS_STATUS_EXPIRED = _mega.MegaApi_BUSINESS_STATUS_EXPIRED
    BUSINESS_STATUS_INACTIVE = _mega.MegaApi_BUSINESS_STATUS_INACTIVE
    BUSINESS_STATUS_ACTIVE = _mega.MegaApi_BUSINESS_STATUS_ACTIVE
    BUSINESS_STATUS_GRACE_PERIOD = _mega.MegaApi_BUSINESS_STATUS_GRACE_PERIOD
    AFFILIATE_TYPE_INVALID = _mega.MegaApi_AFFILIATE_TYPE_INVALID
    AFFILIATE_TYPE_ID = _mega.MegaApi_AFFILIATE_TYPE_ID
    AFFILIATE_TYPE_FILE_FOLDER = _mega.MegaApi_AFFILIATE_TYPE_FILE_FOLDER
    AFFILIATE_TYPE_CHAT = _mega.MegaApi_AFFILIATE_TYPE_CHAT
    AFFILIATE_TYPE_CONTACT = _mega.MegaApi_AFFILIATE_TYPE_CONTACT
    ACCOUNT_NOT_BLOCKED = _mega.MegaApi_ACCOUNT_NOT_BLOCKED
    ACCOUNT_BLOCKED_EXCESS_DATA_USAGE = _mega.MegaApi_ACCOUNT_BLOCKED_EXCESS_DATA_USAGE
    ACCOUNT_BLOCKED_TOS_NON_COPYRIGHT = _mega.MegaApi_ACCOUNT_BLOCKED_TOS_NON_COPYRIGHT
    ACCOUNT_BLOCKED_TOS_COPYRIGHT = _mega.MegaApi_ACCOUNT_BLOCKED_TOS_COPYRIGHT
    ACCOUNT_BLOCKED_SUBUSER_DISABLED = _mega.MegaApi_ACCOUNT_BLOCKED_SUBUSER_DISABLED
    ACCOUNT_BLOCKED_SUBUSER_REMOVED = _mega.MegaApi_ACCOUNT_BLOCKED_SUBUSER_REMOVED
    ACCOUNT_BLOCKED_VERIFICATION_SMS = _mega.MegaApi_ACCOUNT_BLOCKED_VERIFICATION_SMS
    ACCOUNT_BLOCKED_VERIFICATION_EMAIL = _mega.MegaApi_ACCOUNT_BLOCKED_VERIFICATION_EMAIL
    BACKUP_TYPE_INVALID = _mega.MegaApi_BACKUP_TYPE_INVALID
    BACKUP_TYPE_TWO_WAY_SYNC = _mega.MegaApi_BACKUP_TYPE_TWO_WAY_SYNC
    BACKUP_TYPE_UP_SYNC = _mega.MegaApi_BACKUP_TYPE_UP_SYNC
    BACKUP_TYPE_DOWN_SYNC = _mega.MegaApi_BACKUP_TYPE_DOWN_SYNC
    BACKUP_TYPE_CAMERA_UPLOADS = _mega.MegaApi_BACKUP_TYPE_CAMERA_UPLOADS
    BACKUP_TYPE_MEDIA_UPLOADS = _mega.MegaApi_BACKUP_TYPE_MEDIA_UPLOADS
    GOOGLE_ADS_DEFAULT = _mega.MegaApi_GOOGLE_ADS_DEFAULT
    GOOGLE_ADS_FORCE_ADS = _mega.MegaApi_GOOGLE_ADS_FORCE_ADS
    GOOGLE_ADS_IGNORE_MEGA = _mega.MegaApi_GOOGLE_ADS_IGNORE_MEGA
    GOOGLE_ADS_IGNORE_COUNTRY = _mega.MegaApi_GOOGLE_ADS_IGNORE_COUNTRY
    GOOGLE_ADS_IGNORE_IP = _mega.MegaApi_GOOGLE_ADS_IGNORE_IP
    GOOGLE_ADS_IGNORE_PRO = _mega.MegaApi_GOOGLE_ADS_IGNORE_PRO
    GOOGLE_ADS_FLAG_IGNORE_ROLLOUT = _mega.MegaApi_GOOGLE_ADS_FLAG_IGNORE_ROLLOUT

    def __init__(self, *args):
        _mega.MegaApi_swiginit(self, _mega.new_MegaApi(*args))
    __swig_destroy__ = _mega.delete_MegaApi

    def addListener(self, listener):
        return _mega.MegaApi_addListener(self, listener)

    def addRequestListener(self, listener):
        return _mega.MegaApi_addRequestListener(self, listener)

    def addTransferListener(self, listener):
        return _mega.MegaApi_addTransferListener(self, listener)

    def addGlobalListener(self, listener):
        return _mega.MegaApi_addGlobalListener(self, listener)

    def addBackupListener(self, listener):
        return _mega.MegaApi_addBackupListener(self, listener)

    def removeBackupListener(self, listener):
        return _mega.MegaApi_removeBackupListener(self, listener)

    def removeListener(self, listener):
        return _mega.MegaApi_removeListener(self, listener)

    def removeRequestListener(self, listener):
        return _mega.MegaApi_removeRequestListener(self, listener)

    def removeTransferListener(self, listener):
        return _mega.MegaApi_removeTransferListener(self, listener)

    def removeGlobalListener(self, listener):
        return _mega.MegaApi_removeGlobalListener(self, listener)

    def getCurrentRequest(self):
        return _mega.MegaApi_getCurrentRequest(self)

    def getCurrentTransfer(self):
        return _mega.MegaApi_getCurrentTransfer(self)

    def getCurrentError(self):
        return _mega.MegaApi_getCurrentError(self)

    def getCurrentNodes(self):
        return _mega.MegaApi_getCurrentNodes(self)

    def getCurrentUsers(self):
        return _mega.MegaApi_getCurrentUsers(self)

    def getStringHash(self, base64pwkey, email):
        return _mega.MegaApi_getStringHash(self, base64pwkey, email)

    def getSDKtime(self):
        return _mega.MegaApi_getSDKtime(self)

    def getSessionTransferURL(self, path, listener=None):
        return _mega.MegaApi_getSessionTransferURL(self, path, listener)

    @staticmethod
    def base32ToHandle(base32Handle):
        return _mega.MegaApi_base32ToHandle(base32Handle)

    @staticmethod
    def base64ToHandle(base64Handle):
        return _mega.MegaApi_base64ToHandle(base64Handle)

    @staticmethod
    def base64ToUserHandle(base64Handle):
        return _mega.MegaApi_base64ToUserHandle(base64Handle)

    @staticmethod
    def handleToBase64(handle):
        return _mega.MegaApi_handleToBase64(handle)

    @staticmethod
    def userHandleToBase64(handle):
        return _mega.MegaApi_userHandleToBase64(handle)

    @staticmethod
    def binaryToBase64(binaryData, length):
        return _mega.MegaApi_binaryToBase64(binaryData, length)

    @staticmethod
    def base64ToBinary(base64string, binary, binarysize):
        return _mega.MegaApi_base64ToBinary(base64string, binary, binarysize)

    def addEntropy(self, data, size):
        return _mega.MegaApi_addEntropy(self, data, size)

    def retryPendingConnections(self, disconnect=False, includexfers=False, listener=None):
        return _mega.MegaApi_retryPendingConnections(self, disconnect, includexfers, listener)

    def setDnsServers(self, dnsServers, listener=None):
        return _mega.MegaApi_setDnsServers(self, dnsServers, listener)

    def serverSideRubbishBinAutopurgeEnabled(self):
        return _mega.MegaApi_serverSideRubbishBinAutopurgeEnabled(self)

    def appleVoipPushEnabled(self):
        return _mega.MegaApi_appleVoipPushEnabled(self)

    def newLinkFormatEnabled(self):
        return _mega.MegaApi_newLinkFormatEnabled(self)

    def smsAllowedState(self):
        return _mega.MegaApi_smsAllowedState(self)

    def smsVerifiedPhoneNumber(self):
        return _mega.MegaApi_smsVerifiedPhoneNumber(self)

    def multiFactorAuthAvailable(self):
        return _mega.MegaApi_multiFactorAuthAvailable(self)

    def resetSmsVerifiedPhoneNumber(self, listener=None):
        return _mega.MegaApi_resetSmsVerifiedPhoneNumber(self, listener)

    def multiFactorAuthCheck(self, email, listener=None):
        return _mega.MegaApi_multiFactorAuthCheck(self, email, listener)

    def multiFactorAuthGetCode(self, listener=None):
        return _mega.MegaApi_multiFactorAuthGetCode(self, listener)

    def multiFactorAuthEnable(self, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthEnable(self, pin, listener)

    def multiFactorAuthDisable(self, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthDisable(self, pin, listener)

    def multiFactorAuthLogin(self, email, password, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthLogin(self, email, password, pin, listener)

    def multiFactorAuthChangePassword(self, oldPassword, newPassword, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthChangePassword(self, oldPassword, newPassword, pin, listener)

    def multiFactorAuthChangeEmail(self, email, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthChangeEmail(self, email, pin, listener)

    def multiFactorAuthCancelAccount(self, pin, listener=None):
        return _mega.MegaApi_multiFactorAuthCancelAccount(self, pin, listener)

    def fetchTimeZone(self, listener=None):
        return _mega.MegaApi_fetchTimeZone(self, listener)

    def login(self, email, password, listener=None):
        return _mega.MegaApi_login(self, email, password, listener)

    def loginToFolder(self, *args):
        return _mega.MegaApi_loginToFolder(self, *args)

    def fastLogin(self, *args):
        return _mega.MegaApi_fastLogin(self, *args)

    def killSession(self, sessionHandle, listener=None):
        return _mega.MegaApi_killSession(self, sessionHandle, listener)

    def getUserData(self, *args):
        return _mega.MegaApi_getUserData(self, *args)

    def getMiscFlags(self, listener=None):
        return _mega.MegaApi_getMiscFlags(self, listener)

    def sendDevCommand(self, command, email=None, listener=None):
        return _mega.MegaApi_sendDevCommand(self, command, email, listener)

    def sendOdqDevCommand(self, email=None, listener=None):
        return _mega.MegaApi_sendOdqDevCommand(self, email, listener)

    def sendUsedTransferQuotaDevCommand(self, quota, email=None, listener=None):
        return _mega.MegaApi_sendUsedTransferQuotaDevCommand(self, quota, email, listener)

    def sendBusinessStatusDevCommand(self, businessStatus, email=None, listener=None):
        return _mega.MegaApi_sendBusinessStatusDevCommand(self, businessStatus, email, listener)

    def sendUserStatusDevCommand(self, userStatus, email=None, listener=None):
        return _mega.MegaApi_sendUserStatusDevCommand(self, userStatus, email, listener)

    def dumpSession(self):
        return _mega.MegaApi_dumpSession(self)

    def getSequenceNumber(self):
        return _mega.MegaApi_getSequenceNumber(self)

    def getAccountAuth(self):
        return _mega.MegaApi_getAccountAuth(self)

    def setAccountAuth(self, auth):
        return _mega.MegaApi_setAccountAuth(self, auth)

    def createAccount(self, *args):
        return _mega.MegaApi_createAccount(self, *args)

    def resumeCreateAccount(self, sid, listener=None):
        return _mega.MegaApi_resumeCreateAccount(self, sid, listener)

    def cancelCreateAccount(self, listener=None):
        return _mega.MegaApi_cancelCreateAccount(self, listener)

    def sendSignupLink(self, email, name, password, listener=None):
        return _mega.MegaApi_sendSignupLink(self, email, name, password, listener)

    def fastSendSignupLink(self, email, base64pwkey, name, listener=None):
        return _mega.MegaApi_fastSendSignupLink(self, email, base64pwkey, name, listener)

    def querySignupLink(self, link, listener=None):
        return _mega.MegaApi_querySignupLink(self, link, listener)

    def confirmAccount(self, link, password, listener=None):
        return _mega.MegaApi_confirmAccount(self, link, password, listener)

    def fastConfirmAccount(self, link, base64pwkey, listener=None):
        return _mega.MegaApi_fastConfirmAccount(self, link, base64pwkey, listener)

    def resetPassword(self, email, hasMasterKey, listener=None):
        return _mega.MegaApi_resetPassword(self, email, hasMasterKey, listener)

    def queryResetPasswordLink(self, link, listener=None):
        return _mega.MegaApi_queryResetPasswordLink(self, link, listener)

    def confirmResetPassword(self, link, newPwd, masterKey=None, listener=None):
        return _mega.MegaApi_confirmResetPassword(self, link, newPwd, masterKey, listener)

    def cancelAccount(self, listener=None):
        return _mega.MegaApi_cancelAccount(self, listener)

    def queryCancelLink(self, link, listener=None):
        return _mega.MegaApi_queryCancelLink(self, link, listener)

    def confirmCancelAccount(self, link, pwd, listener=None):
        return _mega.MegaApi_confirmCancelAccount(self, link, pwd, listener)

    def resendVerificationEmail(self, listener=None):
        return _mega.MegaApi_resendVerificationEmail(self, listener)

    def changeEmail(self, email, listener=None):
        return _mega.MegaApi_changeEmail(self, email, listener)

    def queryChangeEmailLink(self, link, listener=None):
        return _mega.MegaApi_queryChangeEmailLink(self, link, listener)

    def confirmChangeEmail(self, link, pwd, listener=None):
        return _mega.MegaApi_confirmChangeEmail(self, link, pwd, listener)

    def setProxySettings(self, proxySettings, listener=None):
        return _mega.MegaApi_setProxySettings(self, proxySettings, listener)

    def getAutoProxySettings(self):
        return _mega.MegaApi_getAutoProxySettings(self)

    def isLoggedIn(self):
        return _mega.MegaApi_isLoggedIn(self)

    def whyAmIBlocked(self, listener=None):
        return _mega.MegaApi_whyAmIBlocked(self, listener)

    def contactLinkCreate(self, renew=False, listener=None):
        return _mega.MegaApi_contactLinkCreate(self, renew, listener)

    def contactLinkQuery(self, handle, listener=None):
        return _mega.MegaApi_contactLinkQuery(self, handle, listener)

    def contactLinkDelete(self, *args):
        return _mega.MegaApi_contactLinkDelete(self, *args)

    def keepMeAlive(self, type, enable, listener=None):
        return _mega.MegaApi_keepMeAlive(self, type, enable, listener)

    def getPSA(self, listener=None):
        return _mega.MegaApi_getPSA(self, listener)

    def getPSAWithUrl(self, listener=None):
        return _mega.MegaApi_getPSAWithUrl(self, listener)

    def setPSA(self, id, listener=None):
        return _mega.MegaApi_setPSA(self, id, listener)

    def acknowledgeUserAlerts(self, listener=None):
        return _mega.MegaApi_acknowledgeUserAlerts(self, listener)

    def getMyEmail(self):
        return _mega.MegaApi_getMyEmail(self)

    def getAccountCreationTs(self):
        return _mega.MegaApi_getAccountCreationTs(self)

    def getMyUserHandle(self):
        return _mega.MegaApi_getMyUserHandle(self)

    def getMyUserHandleBinary(self):
        return _mega.MegaApi_getMyUserHandleBinary(self)

    def getMyUser(self):
        return _mega.MegaApi_getMyUser(self)

    def isAchievementsEnabled(self):
        return _mega.MegaApi_isAchievementsEnabled(self)

    def isBusinessAccount(self):
        return _mega.MegaApi_isBusinessAccount(self)

    def isMasterBusinessAccount(self):
        return _mega.MegaApi_isMasterBusinessAccount(self)

    def isBusinessAccountActive(self):
        return _mega.MegaApi_isBusinessAccountActive(self)

    def getBusinessStatus(self):
        return _mega.MegaApi_getBusinessStatus(self)

    def getOverquotaDeadlineTs(self):
        return _mega.MegaApi_getOverquotaDeadlineTs(self)

    def getOverquotaWarningsTs(self):
        return _mega.MegaApi_getOverquotaWarningsTs(self)

    def checkPassword(self, password):
        return _mega.MegaApi_checkPassword(self, password)

    def getMyCredentials(self):
        return _mega.MegaApi_getMyCredentials(self)

    def getUserCredentials(self, user, listener=None):
        return _mega.MegaApi_getUserCredentials(self, user, listener)

    def areCredentialsVerified(self, user):
        return _mega.MegaApi_areCredentialsVerified(self, user)

    def verifyCredentials(self, user, listener=None):
        return _mega.MegaApi_verifyCredentials(self, user, listener)

    def resetCredentials(self, user, listener=None):
        return _mega.MegaApi_resetCredentials(self, user, listener)

    def getMyRSAPrivateKey(self):
        return _mega.MegaApi_getMyRSAPrivateKey(self)

    @staticmethod
    def setLogLevel(logLevel):
        return _mega.MegaApi_setLogLevel(logLevel)

    @staticmethod
    def setMaxPayloadLogSize(maxSize):
        return _mega.MegaApi_setMaxPayloadLogSize(maxSize)

    @staticmethod
    def setLogToConsole(enable):
        return _mega.MegaApi_setLogToConsole(enable)

    @staticmethod
    def addLoggerObject(megaLogger):
        return _mega.MegaApi_addLoggerObject(megaLogger)

    @staticmethod
    def removeLoggerObject(megaLogger):
        return _mega.MegaApi_removeLoggerObject(megaLogger)

    @staticmethod
    def log(*args):
        return _mega.MegaApi_log(*args)

    def setLoggingName(self, loggingName):
        return _mega.MegaApi_setLoggingName(self, loggingName)

    def createFolder(self, name, parent, listener=None):
        return _mega.MegaApi_createFolder(self, name, parent, listener)

    def createLocalFolder(self, localPath):
        return _mega.MegaApi_createLocalFolder(self, localPath)

    def moveNode(self, *args):
        return _mega.MegaApi_moveNode(self, *args)

    def copyNode(self, *args):
        return _mega.MegaApi_copyNode(self, *args)

    def renameNode(self, node, newName, listener=None):
        return _mega.MegaApi_renameNode(self, node, newName, listener)

    def remove(self, node, listener=None):
        return _mega.MegaApi_remove(self, node, listener)

    def removeVersions(self, listener=None):
        return _mega.MegaApi_removeVersions(self, listener)

    def removeVersion(self, node, listener=None):
        return _mega.MegaApi_removeVersion(self, node, listener)

    def restoreVersion(self, version, listener=None):
        return _mega.MegaApi_restoreVersion(self, version, listener)

    def cleanRubbishBin(self, listener=None):
        return _mega.MegaApi_cleanRubbishBin(self, listener)

    def sendFileToUser(self, *args):
        return _mega.MegaApi_sendFileToUser(self, *args)

    def share(self, *args):
        return _mega.MegaApi_share(self, *args)

    def importFileLink(self, megaFileLink, parent, listener=None):
        return _mega.MegaApi_importFileLink(self, megaFileLink, parent, listener)

    def decryptPasswordProtectedLink(self, link, password, listener=None):
        return _mega.MegaApi_decryptPasswordProtectedLink(self, link, password, listener)

    def encryptLinkWithPassword(self, link, password, listener=None):
        return _mega.MegaApi_encryptLinkWithPassword(self, link, password, listener)

    def getPublicNode(self, megaFileLink, listener=None):
        return _mega.MegaApi_getPublicNode(self, megaFileLink, listener)

    def buildPublicLink(self, publicHandle, key, isFolder):
        return _mega.MegaApi_buildPublicLink(self, publicHandle, key, isFolder)

    def getThumbnail(self, node, dstFilePath, listener=None):
        return _mega.MegaApi_getThumbnail(self, node, dstFilePath, listener)

    def getPreview(self, node, dstFilePath, listener=None):
        return _mega.MegaApi_getPreview(self, node, dstFilePath, listener)

    def getUserAvatar(self, *args):
        return _mega.MegaApi_getUserAvatar(self, *args)

    @staticmethod
    def getUserAvatarColor(*args):
        return _mega.MegaApi_getUserAvatarColor(*args)

    @staticmethod
    def getUserAvatarSecondaryColor(*args):
        return _mega.MegaApi_getUserAvatarSecondaryColor(*args)

    def getChatUserAttribute(self, email_or_handle, type, ph, listener=None):
        return _mega.MegaApi_getChatUserAttribute(self, email_or_handle, type, ph, listener)

    def getUserAttribute(self, *args):
        return _mega.MegaApi_getUserAttribute(self, *args)

    def userAttributeToString(self, attr):
        return _mega.MegaApi_userAttributeToString(self, attr)

    def userAttributeToLongName(self, attr):
        return _mega.MegaApi_userAttributeToLongName(self, attr)

    def userAttributeFromString(self, name):
        return _mega.MegaApi_userAttributeFromString(self, name)

    def getUserEmail(self, handle, listener=None):
        return _mega.MegaApi_getUserEmail(self, handle, listener)

    def cancelGetThumbnail(self, node, listener=None):
        return _mega.MegaApi_cancelGetThumbnail(self, node, listener)

    def cancelGetPreview(self, node, listener=None):
        return _mega.MegaApi_cancelGetPreview(self, node, listener)

    def setThumbnail(self, node, srcFilePath, listener=None):
        return _mega.MegaApi_setThumbnail(self, node, srcFilePath, listener)

    def putThumbnail(self, bu, srcFilePath, listener=None):
        return _mega.MegaApi_putThumbnail(self, bu, srcFilePath, listener)

    def setThumbnailByHandle(self, node, fileattribute, listener=None):
        return _mega.MegaApi_setThumbnailByHandle(self, node, fileattribute, listener)

    def setPreview(self, node, srcFilePath, listener=None):
        return _mega.MegaApi_setPreview(self, node, srcFilePath, listener)

    def putPreview(self, bu, srcFilePath, listener=None):
        return _mega.MegaApi_putPreview(self, bu, srcFilePath, listener)

    def setPreviewByHandle(self, node, fileattribute, listener=None):
        return _mega.MegaApi_setPreviewByHandle(self, node, fileattribute, listener)

    def setAvatar(self, srcFilePath, listener=None):
        return _mega.MegaApi_setAvatar(self, srcFilePath, listener)

    def testAllocation(self, allocCount, allocSize):
        return _mega.MegaApi_testAllocation(self, allocCount, allocSize)

    def setUserAttribute(self, *args):
        return _mega.MegaApi_setUserAttribute(self, *args)

    def setCustomNodeAttribute(self, node, attrName, value, listener=None):
        return _mega.MegaApi_setCustomNodeAttribute(self, node, attrName, value, listener)

    def setNodeDuration(self, node, duration, listener=None):
        return _mega.MegaApi_setNodeDuration(self, node, duration, listener)

    def setNodeLabel(self, node, label, listener=None):
        return _mega.MegaApi_setNodeLabel(self, node, label, listener)

    def resetNodeLabel(self, node, listener=None):
        return _mega.MegaApi_resetNodeLabel(self, node, listener)

    def setNodeFavourite(self, node, fav, listener=None):
        return _mega.MegaApi_setNodeFavourite(self, node, fav, listener)

    def getFavourites(self, node, count, listener=None):
        return _mega.MegaApi_getFavourites(self, node, count, listener)

    def setNodeCoordinates(self, node, latitude, longitude, listener=None):
        return _mega.MegaApi_setNodeCoordinates(self, node, latitude, longitude, listener)

    def setUnshareableNodeCoordinates(self, node, latitude, longitude, listener=None):
        return _mega.MegaApi_setUnshareableNodeCoordinates(self, node, latitude, longitude, listener)

    def exportNode(self, *args):
        return _mega.MegaApi_exportNode(self, *args)

    def disableExport(self, node, listener=None):
        return _mega.MegaApi_disableExport(self, node, listener)

    def fetchNodes(self, listener=None):
        return _mega.MegaApi_fetchNodes(self, listener)

    def getCloudStorageUsed(self, listener=None):
        return _mega.MegaApi_getCloudStorageUsed(self, listener)

    def getAccountDetails(self, listener=None):
        return _mega.MegaApi_getAccountDetails(self, listener)

    def getSpecificAccountDetails(self, storage, transfer, pro, source=-1, listener=None):
        return _mega.MegaApi_getSpecificAccountDetails(self, storage, transfer, pro, source, listener)

    def getExtendedAccountDetails(self, sessions=False, purchases=False, transactions=False, listener=None):
        return _mega.MegaApi_getExtendedAccountDetails(self, sessions, purchases, transactions, listener)

    def queryTransferQuota(self, size, listener=None):
        return _mega.MegaApi_queryTransferQuota(self, size, listener)

    def getPricing(self, listener=None):
        return _mega.MegaApi_getPricing(self, listener)

    def getPaymentId(self, *args):
        return _mega.MegaApi_getPaymentId(self, *args)

    def upgradeAccount(self, productHandle, paymentMethod, listener=None):
        return _mega.MegaApi_upgradeAccount(self, productHandle, paymentMethod, listener)

    def submitPurchaseReceipt(self, *args):
        return _mega.MegaApi_submitPurchaseReceipt(self, *args)

    def creditCardStore(self, address1, address2, city, province, country, postalcode, firstname, lastname, creditcard, expire_month, expire_year, cv2, listener=None):
        return _mega.MegaApi_creditCardStore(self, address1, address2, city, province, country, postalcode, firstname, lastname, creditcard, expire_month, expire_year, cv2, listener)

    def creditCardQuerySubscriptions(self, listener=None):
        return _mega.MegaApi_creditCardQuerySubscriptions(self, listener)

    def creditCardCancelSubscriptions(self, reason, listener=None):
        return _mega.MegaApi_creditCardCancelSubscriptions(self, reason, listener)

    def getPaymentMethods(self, listener=None):
        return _mega.MegaApi_getPaymentMethods(self, listener)

    def exportMasterKey(self):
        return _mega.MegaApi_exportMasterKey(self)

    def masterKeyExported(self, listener=None):
        return _mega.MegaApi_masterKeyExported(self, listener)

    def passwordReminderDialogSucceeded(self, listener=None):
        return _mega.MegaApi_passwordReminderDialogSucceeded(self, listener)

    def passwordReminderDialogSkipped(self, listener=None):
        return _mega.MegaApi_passwordReminderDialogSkipped(self, listener)

    def passwordReminderDialogBlocked(self, listener=None):
        return _mega.MegaApi_passwordReminderDialogBlocked(self, listener)

    def shouldShowPasswordReminderDialog(self, atLogout, listener=None):
        return _mega.MegaApi_shouldShowPasswordReminderDialog(self, atLogout, listener)

    def isMasterKeyExported(self, listener=None):
        return _mega.MegaApi_isMasterKeyExported(self, listener)

    def enableRichPreviews(self, enable, listener=None):
        return _mega.MegaApi_enableRichPreviews(self, enable, listener)

    def isRichPreviewsEnabled(self, listener=None):
        return _mega.MegaApi_isRichPreviewsEnabled(self, listener)

    def shouldShowRichLinkWarning(self, listener=None):
        return _mega.MegaApi_shouldShowRichLinkWarning(self, listener)

    def setRichLinkWarningCounterValue(self, value, listener=None):
        return _mega.MegaApi_setRichLinkWarningCounterValue(self, value, listener)

    def enableGeolocation(self, listener=None):
        return _mega.MegaApi_enableGeolocation(self, listener)

    def isGeolocationEnabled(self, listener=None):
        return _mega.MegaApi_isGeolocationEnabled(self, listener)

    def setMyChatFilesFolder(self, nodehandle, listener=None):
        return _mega.MegaApi_setMyChatFilesFolder(self, nodehandle, listener)

    def getMyChatFilesFolder(self, listener=None):
        return _mega.MegaApi_getMyChatFilesFolder(self, listener)

    def setCameraUploadsFolder(self, nodehandle, listener=None):
        return _mega.MegaApi_setCameraUploadsFolder(self, nodehandle, listener)

    def setCameraUploadsFolderSecondary(self, nodehandle, listener=None):
        return _mega.MegaApi_setCameraUploadsFolderSecondary(self, nodehandle, listener)

    def setCameraUploadsFolders(self, primaryFolder, secondaryFolder, listener=None):
        return _mega.MegaApi_setCameraUploadsFolders(self, primaryFolder, secondaryFolder, listener)

    def getCameraUploadsFolder(self, listener=None):
        return _mega.MegaApi_getCameraUploadsFolder(self, listener)

    def getCameraUploadsFolderSecondary(self, listener=None):
        return _mega.MegaApi_getCameraUploadsFolderSecondary(self, listener)

    def setMyBackupsFolder(self, nodehandle, listener=None):
        return _mega.MegaApi_setMyBackupsFolder(self, nodehandle, listener)

    def getMyBackupsFolder(self, listener=None):
        return _mega.MegaApi_getMyBackupsFolder(self, listener)

    def getUserAlias(self, uh, listener=None):
        return _mega.MegaApi_getUserAlias(self, uh, listener)

    def setUserAlias(self, uh, alias, listener=None):
        return _mega.MegaApi_setUserAlias(self, uh, alias, listener)

    def getPushNotificationSettings(self, listener=None):
        return _mega.MegaApi_getPushNotificationSettings(self, listener)

    def setPushNotificationSettings(self, settings, listener=None):
        return _mega.MegaApi_setPushNotificationSettings(self, settings, listener)

    def getRubbishBinAutopurgePeriod(self, listener=None):
        return _mega.MegaApi_getRubbishBinAutopurgePeriod(self, listener)

    def setRubbishBinAutopurgePeriod(self, days, listener=None):
        return _mega.MegaApi_setRubbishBinAutopurgePeriod(self, days, listener)

    def getDeviceId(self):
        return _mega.MegaApi_getDeviceId(self)

    def getDeviceName(self, listener=None):
        return _mega.MegaApi_getDeviceName(self, listener)

    def setDeviceName(self, deviceName, listener=None):
        return _mega.MegaApi_setDeviceName(self, deviceName, listener)

    def changePassword(self, oldPassword, newPassword, listener=None):
        return _mega.MegaApi_changePassword(self, oldPassword, newPassword, listener)

    def inviteContact(self, *args):
        return _mega.MegaApi_inviteContact(self, *args)

    def replyContactRequest(self, request, action, listener=None):
        return _mega.MegaApi_replyContactRequest(self, request, action, listener)

    def removeContact(self, user, listener=None):
        return _mega.MegaApi_removeContact(self, user, listener)

    def logout(self, listener=None):
        return _mega.MegaApi_logout(self, listener)

    def localLogout(self, listener=None):
        return _mega.MegaApi_localLogout(self, listener)

    def invalidateCache(self):
        return _mega.MegaApi_invalidateCache(self)

    def getPasswordStrength(self, password):
        return _mega.MegaApi_getPasswordStrength(self, password)

    def submitFeedback(self, rating, comment, listener=None):
        return _mega.MegaApi_submitFeedback(self, rating, comment, listener)

    def sendEvent(self, eventType, message, listener=None):
        return _mega.MegaApi_sendEvent(self, eventType, message, listener)

    def createSupportTicket(self, message, type=1, listener=None):
        return _mega.MegaApi_createSupportTicket(self, message, type, listener)

    def reportDebugEvent(self, text, listener=None):
        return _mega.MegaApi_reportDebugEvent(self, text, listener)

    def useHttpsOnly(self, httpsOnly, listener=None):
        return _mega.MegaApi_useHttpsOnly(self, httpsOnly, listener)

    def usingHttpsOnly(self):
        return _mega.MegaApi_usingHttpsOnly(self)

    def startUploadForSupport(self, localPath, isSourceTemporary=False, listener=None):
        return _mega.MegaApi_startUploadForSupport(self, localPath, isSourceTemporary, listener)

    def startUploadWithData(self, *args):
        return _mega.MegaApi_startUploadWithData(self, *args)

    def startUploadWithTopPriority(self, *args):
        return _mega.MegaApi_startUploadWithTopPriority(self, *args)

    def startUpload(self, *args):
        return _mega.MegaApi_startUpload(self, *args)

    def startUploadForChat(self, *args):
        return _mega.MegaApi_startUploadForChat(self, *args)

    def startDownload(self, node, localPath, listener=None):
        return _mega.MegaApi_startDownload(self, node, localPath, listener)

    def startDownloadWithData(self, node, localPath, appData, listener=None):
        return _mega.MegaApi_startDownloadWithData(self, node, localPath, appData, listener)

    def startDownloadWithTopPriority(self, node, localPath, appData, listener=None):
        return _mega.MegaApi_startDownloadWithTopPriority(self, node, localPath, appData, listener)

    def startStreaming(self, node, startPos, size, listener):
        return _mega.MegaApi_startStreaming(self, node, startPos, size, listener)

    def setStreamingMinimumRate(self, bytesPerSecond):
        return _mega.MegaApi_setStreamingMinimumRate(self, bytesPerSecond)

    def cancelTransfer(self, transfer, listener=None):
        return _mega.MegaApi_cancelTransfer(self, transfer, listener)

    def retryTransfer(self, transfer, listener=None):
        return _mega.MegaApi_retryTransfer(self, transfer, listener)

    def moveTransferUp(self, transfer, listener=None):
        return _mega.MegaApi_moveTransferUp(self, transfer, listener)

    def moveTransferUpByTag(self, transferTag, listener=None):
        return _mega.MegaApi_moveTransferUpByTag(self, transferTag, listener)

    def moveTransferDown(self, transfer, listener=None):
        return _mega.MegaApi_moveTransferDown(self, transfer, listener)

    def moveTransferDownByTag(self, transferTag, listener=None):
        return _mega.MegaApi_moveTransferDownByTag(self, transferTag, listener)

    def moveTransferToFirst(self, transfer, listener=None):
        return _mega.MegaApi_moveTransferToFirst(self, transfer, listener)

    def moveTransferToFirstByTag(self, transferTag, listener=None):
        return _mega.MegaApi_moveTransferToFirstByTag(self, transferTag, listener)

    def moveTransferToLast(self, transfer, listener=None):
        return _mega.MegaApi_moveTransferToLast(self, transfer, listener)

    def moveTransferToLastByTag(self, transferTag, listener=None):
        return _mega.MegaApi_moveTransferToLastByTag(self, transferTag, listener)

    def moveTransferBefore(self, transfer, prevTransfer, listener=None):
        return _mega.MegaApi_moveTransferBefore(self, transfer, prevTransfer, listener)

    def moveTransferBeforeByTag(self, transferTag, prevTransferTag, listener=None):
        return _mega.MegaApi_moveTransferBeforeByTag(self, transferTag, prevTransferTag, listener)

    def cancelTransferByTag(self, transferTag, listener=None):
        return _mega.MegaApi_cancelTransferByTag(self, transferTag, listener)

    def cancelTransfers(self, type, listener=None):
        return _mega.MegaApi_cancelTransfers(self, type, listener)

    def pauseTransfers(self, *args):
        return _mega.MegaApi_pauseTransfers(self, *args)

    def pauseTransfer(self, transfer, pause, listener=None):
        return _mega.MegaApi_pauseTransfer(self, transfer, pause, listener)

    def pauseTransferByTag(self, transferTag, pause, listener=None):
        return _mega.MegaApi_pauseTransferByTag(self, transferTag, pause, listener)

    def enableTransferResumption(self, loggedOutId=None):
        return _mega.MegaApi_enableTransferResumption(self, loggedOutId)

    def disableTransferResumption(self, loggedOutId=None):
        return _mega.MegaApi_disableTransferResumption(self, loggedOutId)

    def areTransfersPaused(self, direction):
        return _mega.MegaApi_areTransfersPaused(self, direction)

    def setUploadLimit(self, bpslimit):
        return _mega.MegaApi_setUploadLimit(self, bpslimit)

    def setMaxConnections(self, *args):
        return _mega.MegaApi_setMaxConnections(self, *args)

    def setDownloadMethod(self, method):
        return _mega.MegaApi_setDownloadMethod(self, method)

    def setUploadMethod(self, method):
        return _mega.MegaApi_setUploadMethod(self, method)

    def setMaxDownloadSpeed(self, bpslimit):
        return _mega.MegaApi_setMaxDownloadSpeed(self, bpslimit)

    def setMaxUploadSpeed(self, bpslimit):
        return _mega.MegaApi_setMaxUploadSpeed(self, bpslimit)

    def getMaxDownloadSpeed(self):
        return _mega.MegaApi_getMaxDownloadSpeed(self)

    def getMaxUploadSpeed(self):
        return _mega.MegaApi_getMaxUploadSpeed(self)

    def getCurrentDownloadSpeed(self):
        return _mega.MegaApi_getCurrentDownloadSpeed(self)

    def getCurrentUploadSpeed(self):
        return _mega.MegaApi_getCurrentUploadSpeed(self)

    def getCurrentSpeed(self, type):
        return _mega.MegaApi_getCurrentSpeed(self, type)

    def getDownloadMethod(self):
        return _mega.MegaApi_getDownloadMethod(self)

    def getUploadMethod(self):
        return _mega.MegaApi_getUploadMethod(self)

    def getTransferData(self, listener=None):
        return _mega.MegaApi_getTransferData(self, listener)

    def getFirstTransfer(self, type):
        return _mega.MegaApi_getFirstTransfer(self, type)

    def notifyTransfer(self, transfer, listener=None):
        return _mega.MegaApi_notifyTransfer(self, transfer, listener)

    def notifyTransferByTag(self, transferTag, listener=None):
        return _mega.MegaApi_notifyTransferByTag(self, transferTag, listener)

    def getStreamingTransfers(self):
        return _mega.MegaApi_getStreamingTransfers(self)

    def getTransferByTag(self, transferTag):
        return _mega.MegaApi_getTransferByTag(self, transferTag)

    def getTransfers(self, *args):
        return _mega.MegaApi_getTransfers(self, *args)

    def getChildTransfers(self, transferTag):
        return _mega.MegaApi_getChildTransfers(self, transferTag)

    def getBackupFolders(self, backuptag):
        return _mega.MegaApi_getBackupFolders(self, backuptag)

    def abortCurrentBackup(self, tag, listener=None):
        return _mega.MegaApi_abortCurrentBackup(self, tag, listener)

    def startTimer(self, period, listener=None):
        return _mega.MegaApi_startTimer(self, period, listener)

    def getBackupByTag(self, tag):
        return _mega.MegaApi_getBackupByTag(self, tag)

    def getBackupByNode(self, node):
        return _mega.MegaApi_getBackupByNode(self, node)

    def getBackupByPath(self, localPath):
        return _mega.MegaApi_getBackupByPath(self, localPath)

    def update(self):
        return _mega.MegaApi_update(self)

    def isWaiting(self):
        return _mega.MegaApi_isWaiting(self)

    def areServersBusy(self):
        return _mega.MegaApi_areServersBusy(self)

    def getNumPendingUploads(self):
        return _mega.MegaApi_getNumPendingUploads(self)

    def getNumPendingDownloads(self):
        return _mega.MegaApi_getNumPendingDownloads(self)

    def getTotalUploads(self):
        return _mega.MegaApi_getTotalUploads(self)

    def getTotalDownloads(self):
        return _mega.MegaApi_getTotalDownloads(self)

    def resetTotalDownloads(self):
        return _mega.MegaApi_resetTotalDownloads(self)

    def resetTotalUploads(self):
        return _mega.MegaApi_resetTotalUploads(self)

    def getTotalDownloadedBytes(self):
        return _mega.MegaApi_getTotalDownloadedBytes(self)

    def getTotalUploadedBytes(self):
        return _mega.MegaApi_getTotalUploadedBytes(self)

    def getTotalDownloadBytes(self):
        return _mega.MegaApi_getTotalDownloadBytes(self)

    def getTotalUploadBytes(self):
        return _mega.MegaApi_getTotalUploadBytes(self)

    def updateStats(self):
        return _mega.MegaApi_updateStats(self)

    def getNumNodes(self):
        return _mega.MegaApi_getNumNodes(self)
    ORDER_NONE = _mega.MegaApi_ORDER_NONE
    ORDER_DEFAULT_ASC = _mega.MegaApi_ORDER_DEFAULT_ASC
    ORDER_DEFAULT_DESC = _mega.MegaApi_ORDER_DEFAULT_DESC
    ORDER_SIZE_ASC = _mega.MegaApi_ORDER_SIZE_ASC
    ORDER_SIZE_DESC = _mega.MegaApi_ORDER_SIZE_DESC
    ORDER_CREATION_ASC = _mega.MegaApi_ORDER_CREATION_ASC
    ORDER_CREATION_DESC = _mega.MegaApi_ORDER_CREATION_DESC
    ORDER_MODIFICATION_ASC = _mega.MegaApi_ORDER_MODIFICATION_ASC
    ORDER_MODIFICATION_DESC = _mega.MegaApi_ORDER_MODIFICATION_DESC
    ORDER_ALPHABETICAL_ASC = _mega.MegaApi_ORDER_ALPHABETICAL_ASC
    ORDER_ALPHABETICAL_DESC = _mega.MegaApi_ORDER_ALPHABETICAL_DESC
    ORDER_PHOTO_ASC = _mega.MegaApi_ORDER_PHOTO_ASC
    ORDER_PHOTO_DESC = _mega.MegaApi_ORDER_PHOTO_DESC
    ORDER_VIDEO_ASC = _mega.MegaApi_ORDER_VIDEO_ASC
    ORDER_VIDEO_DESC = _mega.MegaApi_ORDER_VIDEO_DESC
    ORDER_LINK_CREATION_ASC = _mega.MegaApi_ORDER_LINK_CREATION_ASC
    ORDER_LINK_CREATION_DESC = _mega.MegaApi_ORDER_LINK_CREATION_DESC
    ORDER_LABEL_ASC = _mega.MegaApi_ORDER_LABEL_ASC
    ORDER_LABEL_DESC = _mega.MegaApi_ORDER_LABEL_DESC
    ORDER_FAV_ASC = _mega.MegaApi_ORDER_FAV_ASC
    ORDER_FAV_DESC = _mega.MegaApi_ORDER_FAV_DESC
    FILE_TYPE_DEFAULT = _mega.MegaApi_FILE_TYPE_DEFAULT
    FILE_TYPE_PHOTO = _mega.MegaApi_FILE_TYPE_PHOTO
    FILE_TYPE_AUDIO = _mega.MegaApi_FILE_TYPE_AUDIO
    FILE_TYPE_VIDEO = _mega.MegaApi_FILE_TYPE_VIDEO
    FILE_TYPE_DOCUMENT = _mega.MegaApi_FILE_TYPE_DOCUMENT
    SEARCH_TARGET_INSHARE = _mega.MegaApi_SEARCH_TARGET_INSHARE
    SEARCH_TARGET_OUTSHARE = _mega.MegaApi_SEARCH_TARGET_OUTSHARE
    SEARCH_TARGET_PUBLICLINK = _mega.MegaApi_SEARCH_TARGET_PUBLICLINK
    SEARCH_TARGET_ROOTNODE = _mega.MegaApi_SEARCH_TARGET_ROOTNODE
    SEARCH_TARGET_ALL = _mega.MegaApi_SEARCH_TARGET_ALL

    def getNumChildren(self, parent):
        return _mega.MegaApi_getNumChildren(self, parent)

    def getNumChildFiles(self, parent):
        return _mega.MegaApi_getNumChildFiles(self, parent)

    def getNumChildFolders(self, parent):
        return _mega.MegaApi_getNumChildFolders(self, parent)

    def getChildren(self, parent, order=1):
        return _mega.MegaApi_getChildren(self, parent, order)

    def getVersions(self, node):
        return _mega.MegaApi_getVersions(self, node)

    def getNumVersions(self, node):
        return _mega.MegaApi_getNumVersions(self, node)

    def hasVersions(self, node):
        return _mega.MegaApi_hasVersions(self, node)

    def getFolderInfo(self, node, listener=None):
        return _mega.MegaApi_getFolderInfo(self, node, listener)

    def getFileFolderChildren(self, p, order=1):
        return _mega.MegaApi_getFileFolderChildren(self, p, order)

    def hasChildren(self, parent):
        return _mega.MegaApi_hasChildren(self, parent)

    def getChildNode(self, parent, name):
        return _mega.MegaApi_getChildNode(self, parent, name)

    def getParentNode(self, node):
        return _mega.MegaApi_getParentNode(self, node)

    def getNodePath(self, node):
        return _mega.MegaApi_getNodePath(self, node)

    def getNodePathByNodeHandle(self, handle):
        return _mega.MegaApi_getNodePathByNodeHandle(self, handle)

    def getNodeByPath(self, path, n=None):
        return _mega.MegaApi_getNodeByPath(self, path, n)

    def getNodeByHandle(self, h):
        return _mega.MegaApi_getNodeByHandle(self, h)

    def getContactRequestByHandle(self, handle):
        return _mega.MegaApi_getContactRequestByHandle(self, handle)

    def getContacts(self):
        return _mega.MegaApi_getContacts(self)

    def getContact(self, user):
        return _mega.MegaApi_getContact(self, user)

    def getUserAlerts(self):
        return _mega.MegaApi_getUserAlerts(self)

    def getNumUnreadUserAlerts(self):
        return _mega.MegaApi_getNumUnreadUserAlerts(self)

    def getInShares(self, *args):
        return _mega.MegaApi_getInShares(self, *args)

    def getInSharesList(self, *args):
        return _mega.MegaApi_getInSharesList(self, *args)

    def getUserFromInShare(self, node, recurse=False):
        return _mega.MegaApi_getUserFromInShare(self, node, recurse)

    def isShared(self, node):
        return _mega.MegaApi_isShared(self, node)

    def isOutShare(self, node):
        return _mega.MegaApi_isOutShare(self, node)

    def isInShare(self, node):
        return _mega.MegaApi_isInShare(self, node)

    def isPendingShare(self, node):
        return _mega.MegaApi_isPendingShare(self, node)

    def getOutShares(self, *args):
        return _mega.MegaApi_getOutShares(self, *args)

    def getPendingOutShares(self, *args):
        return _mega.MegaApi_getPendingOutShares(self, *args)

    def getPublicLinks(self, *args):
        return _mega.MegaApi_getPublicLinks(self, *args)

    def getIncomingContactRequests(self):
        return _mega.MegaApi_getIncomingContactRequests(self)

    def getOutgoingContactRequests(self):
        return _mega.MegaApi_getOutgoingContactRequests(self)

    def getAccess(self, node):
        return _mega.MegaApi_getAccess(self, node)

    def getSize(self, node):
        return _mega.MegaApi_getSize(self, node)

    def getFingerprint(self, *args):
        return _mega.MegaApi_getFingerprint(self, *args)

    def getNodeByFingerprint(self, *args):
        return _mega.MegaApi_getNodeByFingerprint(self, *args)

    def getNodesByFingerprint(self, fingerprint):
        return _mega.MegaApi_getNodesByFingerprint(self, fingerprint)

    def getNodesByOriginalFingerprint(self, originalFingerprint, parent):
        return _mega.MegaApi_getNodesByOriginalFingerprint(self, originalFingerprint, parent)

    def getExportableNodeByFingerprint(self, fingerprint, name=None):
        return _mega.MegaApi_getExportableNodeByFingerprint(self, fingerprint, name)

    def hasFingerprint(self, fingerprint):
        return _mega.MegaApi_hasFingerprint(self, fingerprint)

    def getCRCFromFingerprint(self, fingerprint):
        return _mega.MegaApi_getCRCFromFingerprint(self, fingerprint)

    def getCRC(self, *args):
        return _mega.MegaApi_getCRC(self, *args)

    def getNodeByCRC(self, crc, parent):
        return _mega.MegaApi_getNodeByCRC(self, crc, parent)

    def checkAccess(self, node, level):
        return _mega.MegaApi_checkAccess(self, node, level)

    def checkAccessErrorExtended(self, node, level):
        return _mega.MegaApi_checkAccessErrorExtended(self, node, level)

    def checkMove(self, node, target):
        return _mega.MegaApi_checkMove(self, node, target)

    def checkMoveErrorExtended(self, node, target):
        return _mega.MegaApi_checkMoveErrorExtended(self, node, target)

    def isFilesystemAvailable(self):
        return _mega.MegaApi_isFilesystemAvailable(self)

    def getInboxNode(self):
        return _mega.MegaApi_getInboxNode(self)

    def getRubbishNode(self):
        return _mega.MegaApi_getRubbishNode(self)

    def getRootNode(self, *args):
        return _mega.MegaApi_getRootNode(self, *args)

    def isInCloud(self, node):
        return _mega.MegaApi_isInCloud(self, node)

    def isInRubbish(self, node):
        return _mega.MegaApi_isInRubbish(self, node)

    def isInInbox(self, node):
        return _mega.MegaApi_isInInbox(self, node)

    def setDefaultFilePermissions(self, permissions):
        return _mega.MegaApi_setDefaultFilePermissions(self, permissions)

    def getDefaultFilePermissions(self):
        return _mega.MegaApi_getDefaultFilePermissions(self)

    def setDefaultFolderPermissions(self, permissions):
        return _mega.MegaApi_setDefaultFolderPermissions(self, permissions)

    def getDefaultFolderPermissions(self):
        return _mega.MegaApi_getDefaultFolderPermissions(self)

    def getBandwidthOverquotaDelay(self):
        return _mega.MegaApi_getBandwidthOverquotaDelay(self)

    def search(self, *args):
        return _mega.MegaApi_search(self, *args)

    def searchOnInShares(self, *args):
        return _mega.MegaApi_searchOnInShares(self, *args)

    def searchOnOutShares(self, *args):
        return _mega.MegaApi_searchOnOutShares(self, *args)

    def searchOnPublicLinks(self, *args):
        return _mega.MegaApi_searchOnPublicLinks(self, *args)

    def searchByType(self, *args):
        return _mega.MegaApi_searchByType(self, *args)

    def getRecentActions(self, *args):
        return _mega.MegaApi_getRecentActions(self, *args)

    def processMegaTree(self, node, processor, recursive=True):
        return _mega.MegaApi_processMegaTree(self, node, processor, recursive)

    def authorizeNode(self, node):
        return _mega.MegaApi_authorizeNode(self, node)

    def authorizeChatNode(self, node, cauth):
        return _mega.MegaApi_authorizeChatNode(self, node, cauth)

    def getVersion(self):
        return _mega.MegaApi_getVersion(self)

    def getOperatingSystemVersion(self):
        return _mega.MegaApi_getOperatingSystemVersion(self)

    def getLastAvailableVersion(self, appKey=None, listener=None):
        return _mega.MegaApi_getLastAvailableVersion(self, appKey, listener)

    def getLocalSSLCertificate(self, listener=None):
        return _mega.MegaApi_getLocalSSLCertificate(self, listener)

    def queryDNS(self, hostname, listener=None):
        return _mega.MegaApi_queryDNS(self, hostname, listener)

    def queryGeLB(self, service, timeoutds=40, maxretries=4, listener=None):
        return _mega.MegaApi_queryGeLB(self, service, timeoutds, maxretries, listener)

    def downloadFile(self, url, dstpath, listener=None):
        return _mega.MegaApi_downloadFile(self, url, dstpath, listener)

    def getUserAgent(self):
        return _mega.MegaApi_getUserAgent(self)

    def getBasePath(self):
        return _mega.MegaApi_getBasePath(self)

    def disableGfxFeatures(self, disable):
        return _mega.MegaApi_disableGfxFeatures(self, disable)

    def areGfxFeaturesDisabled(self):
        return _mega.MegaApi_areGfxFeaturesDisabled(self)

    def changeApiUrl(self, apiURL, disablepkp=False):
        return _mega.MegaApi_changeApiUrl(self, apiURL, disablepkp)

    def setLanguage(self, languageCode):
        return _mega.MegaApi_setLanguage(self, languageCode)

    def setLanguagePreference(self, languageCode, listener=None):
        return _mega.MegaApi_setLanguagePreference(self, languageCode, listener)

    def getLanguagePreference(self, listener=None):
        return _mega.MegaApi_getLanguagePreference(self, listener)

    def setFileVersionsOption(self, disable, listener=None):
        return _mega.MegaApi_setFileVersionsOption(self, disable, listener)

    def setContactLinksOption(self, disable, listener=None):
        return _mega.MegaApi_setContactLinksOption(self, disable, listener)

    def getFileVersionsOption(self, listener=None):
        return _mega.MegaApi_getFileVersionsOption(self, listener)

    def getContactLinksOption(self, listener=None):
        return _mega.MegaApi_getContactLinksOption(self, listener)

    def retrySSLerrors(self, enable):
        return _mega.MegaApi_retrySSLerrors(self, enable)

    def setPublicKeyPinning(self, enable):
        return _mega.MegaApi_setPublicKeyPinning(self, enable)

    def pauseActionPackets(self):
        return _mega.MegaApi_pauseActionPackets(self)

    def resumeActionPackets(self):
        return _mega.MegaApi_resumeActionPackets(self)

    def escapeFsIncompatible(self, *args):
        return _mega.MegaApi_escapeFsIncompatible(self, *args)

    def unescapeFsIncompatible(self, *args):
        return _mega.MegaApi_unescapeFsIncompatible(self, *args)

    def createThumbnail(self, imagePath, dstPath):
        return _mega.MegaApi_createThumbnail(self, imagePath, dstPath)

    def createPreview(self, imagePath, dstPath):
        return _mega.MegaApi_createPreview(self, imagePath, dstPath)

    def createAvatar(self, imagePath, dstPath):
        return _mega.MegaApi_createAvatar(self, imagePath, dstPath)

    def backgroundMediaUploadRequestUploadURL(self, fullFileSize, state, listener):
        return _mega.MegaApi_backgroundMediaUploadRequestUploadURL(self, fullFileSize, state, listener)

    def backgroundMediaUploadComplete(self, state, utf8Name, parent, fingerprint, fingerprintoriginal, string64UploadToken, listener):
        return _mega.MegaApi_backgroundMediaUploadComplete(self, state, utf8Name, parent, fingerprint, fingerprintoriginal, string64UploadToken, listener)

    def ensureMediaInfo(self):
        return _mega.MegaApi_ensureMediaInfo(self)

    def setOriginalFingerprint(self, node, originalFingerprint, listener):
        return _mega.MegaApi_setOriginalFingerprint(self, node, originalFingerprint, listener)

    @staticmethod
    def base64ToBase32(base64):
        return _mega.MegaApi_base64ToBase32(base64)

    @staticmethod
    def base32ToBase64(base32):
        return _mega.MegaApi_base32ToBase64(base32)

    @staticmethod
    def strdup(buffer):
        return _mega.MegaApi_strdup(buffer)

    @staticmethod
    def removeRecursively(path):
        return _mega.MegaApi_removeRecursively(path)

    def isOnline(self):
        return _mega.MegaApi_isOnline(self)

    @staticmethod
    def getMimeType(extension):
        return _mega.MegaApi_getMimeType(extension)

    def createChat(self, group, peers, title=None, listener=None):
        return _mega.MegaApi_createChat(self, group, peers, title, listener)

    def createPublicChat(self, peers, userKeyMap, title=None, listener=None):
        return _mega.MegaApi_createPublicChat(self, peers, userKeyMap, title, listener)

    def inviteToChat(self, chatid, uh, privilege, title=None, listener=None):
        return _mega.MegaApi_inviteToChat(self, chatid, uh, privilege, title, listener)

    def inviteToPublicChat(self, chatid, uh, privilege, unifiedKey=None, listener=None):
        return _mega.MegaApi_inviteToPublicChat(self, chatid, uh, privilege, unifiedKey, listener)

    def removeFromChat(self, *args):
        return _mega.MegaApi_removeFromChat(self, *args)

    def getUrlChat(self, chatid, listener=None):
        return _mega.MegaApi_getUrlChat(self, chatid, listener)

    def grantAccessInChat(self, chatid, n, uh, listener=None):
        return _mega.MegaApi_grantAccessInChat(self, chatid, n, uh, listener)

    def removeAccessInChat(self, chatid, n, uh, listener=None):
        return _mega.MegaApi_removeAccessInChat(self, chatid, n, uh, listener)

    def updateChatPermissions(self, chatid, uh, privilege, listener=None):
        return _mega.MegaApi_updateChatPermissions(self, chatid, uh, privilege, listener)

    def truncateChat(self, chatid, messageid, listener=None):
        return _mega.MegaApi_truncateChat(self, chatid, messageid, listener)

    def setChatTitle(self, chatid, title, listener=None):
        return _mega.MegaApi_setChatTitle(self, chatid, title, listener)

    def getChatPresenceURL(self, listener=None):
        return _mega.MegaApi_getChatPresenceURL(self, listener)

    def registerPushNotifications(self, deviceType, token, listener=None):
        return _mega.MegaApi_registerPushNotifications(self, deviceType, token, listener)

    def sendChatStats(self, data, port=0, listener=None):
        return _mega.MegaApi_sendChatStats(self, data, port, listener)

    def sendChatLogs(self, data, aid, port=0, listener=None):
        return _mega.MegaApi_sendChatLogs(self, data, aid, port, listener)

    def getChatList(self):
        return _mega.MegaApi_getChatList(self)

    def getAttachmentAccess(self, chatid, h):
        return _mega.MegaApi_getAttachmentAccess(self, chatid, h)

    def hasAccessToAttachment(self, chatid, h, uh):
        return _mega.MegaApi_hasAccessToAttachment(self, chatid, h, uh)

    def getFileAttribute(self, h):
        return _mega.MegaApi_getFileAttribute(self, h)

    def archiveChat(self, chatid, archive, listener=None):
        return _mega.MegaApi_archiveChat(self, chatid, archive, listener)

    def setChatRetentionTime(self, chatid, period, listener=None):
        return _mega.MegaApi_setChatRetentionTime(self, chatid, period, listener)

    def requestRichPreview(self, url, listener=None):
        return _mega.MegaApi_requestRichPreview(self, url, listener)

    def chatLinkQuery(self, chatid, listener=None):
        return _mega.MegaApi_chatLinkQuery(self, chatid, listener)

    def chatLinkCreate(self, chatid, listener=None):
        return _mega.MegaApi_chatLinkCreate(self, chatid, listener)

    def chatLinkDelete(self, chatid, listener=None):
        return _mega.MegaApi_chatLinkDelete(self, chatid, listener)

    def getChatLinkURL(self, publichandle, listener=None):
        return _mega.MegaApi_getChatLinkURL(self, publichandle, listener)

    def chatLinkClose(self, chatid, title, listener=None):
        return _mega.MegaApi_chatLinkClose(self, chatid, title, listener)

    def chatLinkJoin(self, publichandle, unifiedKey, listener=None):
        return _mega.MegaApi_chatLinkJoin(self, publichandle, unifiedKey, listener)

    def isChatNotifiable(self, chatid):
        return _mega.MegaApi_isChatNotifiable(self, chatid)

    def isSharesNotifiable(self):
        return _mega.MegaApi_isSharesNotifiable(self)

    def isContactsNotifiable(self):
        return _mega.MegaApi_isContactsNotifiable(self)

    def getAccountAchievements(self, listener=None):
        return _mega.MegaApi_getAccountAchievements(self, listener)

    def getMegaAchievements(self, listener=None):
        return _mega.MegaApi_getMegaAchievements(self, listener)

    def catchup(self, listener=None):
        return _mega.MegaApi_catchup(self, listener)

    def sendSMSVerificationCode(self, phoneNumber, listener=None, reverifying_whitelisted=False):
        return _mega.MegaApi_sendSMSVerificationCode(self, phoneNumber, listener, reverifying_whitelisted)

    def checkSMSVerificationCode(self, verificationCode, listener=None):
        return _mega.MegaApi_checkSMSVerificationCode(self, verificationCode, listener)

    def getRegisteredContacts(self, contacts, listener=None):
        return _mega.MegaApi_getRegisteredContacts(self, contacts, listener)

    def getCountryCallingCodes(self, listener=None):
        return _mega.MegaApi_getCountryCallingCodes(self, listener)

    def getPublicLinkInformation(self, megaFolderLink, listener=None):
        return _mega.MegaApi_getPublicLinkInformation(self, megaFolderLink, listener)

    def getMegaApiLock(self, lockNow):
        return _mega.MegaApi_getMegaApiLock(self, lockNow)

    def platformSetRLimitNumFile(self, newNumFileLimit):
        return _mega.MegaApi_platformSetRLimitNumFile(self, newNumFileLimit)

    def getBanners(self, listener=None):
        return _mega.MegaApi_getBanners(self, listener)

    def dismissBanner(self, id, listener=None):
        return _mega.MegaApi_dismissBanner(self, id, listener)

    def setBackup(self, *args):
        return _mega.MegaApi_setBackup(self, *args)

    def updateBackup(self, backupId, backupType, targetNode, localFolder, state, subState, extraData, listener=None):
        return _mega.MegaApi_updateBackup(self, backupId, backupType, targetNode, localFolder, state, subState, extraData, listener)

    def removeBackup(self, *args):
        return _mega.MegaApi_removeBackup(self, *args)

    def sendBackupHeartbeat(self, backupId, status, progress, ups, downs, ts, lastNode, listener=None):
        return _mega.MegaApi_sendBackupHeartbeat(self, backupId, status, progress, ups, downs, ts, lastNode, listener)

    def getBackupName(self, backupId, listener=None):
        return _mega.MegaApi_getBackupName(self, backupId, listener)

    def setBackupName(self, backupId, backupName, listener=None):
        return _mega.MegaApi_setBackupName(self, backupId, backupName, listener)

    def fetchGoogleAds(self, *args):
        return _mega.MegaApi_fetchGoogleAds(self, *args)

    def queryGoogleAds(self, *args):
        return _mega.MegaApi_queryGoogleAds(self, *args)

    def setCookieSettings(self, settings, listener=None):
        return _mega.MegaApi_setCookieSettings(self, settings, listener)

    def getCookieSettings(self, listener=None):
        return _mega.MegaApi_getCookieSettings(self, listener)

    def cookieBannerEnabled(self):
        return _mega.MegaApi_cookieBannerEnabled(self)

# Register MegaApi in _mega:
_mega.MegaApi_swigregister(MegaApi)

def MegaApi_base32ToHandle(base32Handle):
    return _mega.MegaApi_base32ToHandle(base32Handle)

def MegaApi_base64ToHandle(base64Handle):
    return _mega.MegaApi_base64ToHandle(base64Handle)

def MegaApi_base64ToUserHandle(base64Handle):
    return _mega.MegaApi_base64ToUserHandle(base64Handle)

def MegaApi_handleToBase64(handle):
    return _mega.MegaApi_handleToBase64(handle)

def MegaApi_userHandleToBase64(handle):
    return _mega.MegaApi_userHandleToBase64(handle)

def MegaApi_binaryToBase64(binaryData, length):
    return _mega.MegaApi_binaryToBase64(binaryData, length)

def MegaApi_base64ToBinary(base64string, binary, binarysize):
    return _mega.MegaApi_base64ToBinary(base64string, binary, binarysize)

def MegaApi_setLogLevel(logLevel):
    return _mega.MegaApi_setLogLevel(logLevel)

def MegaApi_setMaxPayloadLogSize(maxSize):
    return _mega.MegaApi_setMaxPayloadLogSize(maxSize)

def MegaApi_setLogToConsole(enable):
    return _mega.MegaApi_setLogToConsole(enable)

def MegaApi_addLoggerObject(megaLogger):
    return _mega.MegaApi_addLoggerObject(megaLogger)

def MegaApi_removeLoggerObject(megaLogger):
    return _mega.MegaApi_removeLoggerObject(megaLogger)

def MegaApi_log(*args):
    return _mega.MegaApi_log(*args)

def MegaApi_getUserAvatarColor(*args):
    return _mega.MegaApi_getUserAvatarColor(*args)

def MegaApi_getUserAvatarSecondaryColor(*args):
    return _mega.MegaApi_getUserAvatarSecondaryColor(*args)

def MegaApi_base64ToBase32(base64):
    return _mega.MegaApi_base64ToBase32(base64)

def MegaApi_base32ToBase64(base32):
    return _mega.MegaApi_base32ToBase64(base32)

def MegaApi_strdup(buffer):
    return _mega.MegaApi_strdup(buffer)

def MegaApi_removeRecursively(path):
    return _mega.MegaApi_removeRecursively(path)

def MegaApi_getMimeType(extension):
    return _mega.MegaApi_getMimeType(extension)

class MegaAccountBalance(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaAccountBalance

    def getAmount(self):
        return _mega.MegaAccountBalance_getAmount(self)

    def getCurrency(self):
        return _mega.MegaAccountBalance_getCurrency(self)

    def __init__(self):
        _mega.MegaAccountBalance_swiginit(self, _mega.new_MegaAccountBalance())

# Register MegaAccountBalance in _mega:
_mega.MegaAccountBalance_swigregister(MegaAccountBalance)

class MegaAccountSession(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaAccountSession

    def getCreationTimestamp(self):
        return _mega.MegaAccountSession_getCreationTimestamp(self)

    def getMostRecentUsage(self):
        return _mega.MegaAccountSession_getMostRecentUsage(self)

    def getUserAgent(self):
        return _mega.MegaAccountSession_getUserAgent(self)

    def getIP(self):
        return _mega.MegaAccountSession_getIP(self)

    def getCountry(self):
        return _mega.MegaAccountSession_getCountry(self)

    def isCurrent(self):
        return _mega.MegaAccountSession_isCurrent(self)

    def isAlive(self):
        return _mega.MegaAccountSession_isAlive(self)

    def getHandle(self):
        return _mega.MegaAccountSession_getHandle(self)

    def __init__(self):
        _mega.MegaAccountSession_swiginit(self, _mega.new_MegaAccountSession())

# Register MegaAccountSession in _mega:
_mega.MegaAccountSession_swigregister(MegaAccountSession)

class MegaAccountPurchase(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaAccountPurchase

    def getTimestamp(self):
        return _mega.MegaAccountPurchase_getTimestamp(self)

    def getHandle(self):
        return _mega.MegaAccountPurchase_getHandle(self)

    def getCurrency(self):
        return _mega.MegaAccountPurchase_getCurrency(self)

    def getAmount(self):
        return _mega.MegaAccountPurchase_getAmount(self)

    def getMethod(self):
        return _mega.MegaAccountPurchase_getMethod(self)

    def __init__(self):
        _mega.MegaAccountPurchase_swiginit(self, _mega.new_MegaAccountPurchase())

# Register MegaAccountPurchase in _mega:
_mega.MegaAccountPurchase_swigregister(MegaAccountPurchase)

class MegaAccountTransaction(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaAccountTransaction

    def getTimestamp(self):
        return _mega.MegaAccountTransaction_getTimestamp(self)

    def getHandle(self):
        return _mega.MegaAccountTransaction_getHandle(self)

    def getCurrency(self):
        return _mega.MegaAccountTransaction_getCurrency(self)

    def getAmount(self):
        return _mega.MegaAccountTransaction_getAmount(self)

    def __init__(self):
        _mega.MegaAccountTransaction_swiginit(self, _mega.new_MegaAccountTransaction())

# Register MegaAccountTransaction in _mega:
_mega.MegaAccountTransaction_swigregister(MegaAccountTransaction)

class MegaAccountDetails(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ACCOUNT_TYPE_FREE = _mega.MegaAccountDetails_ACCOUNT_TYPE_FREE
    ACCOUNT_TYPE_PROI = _mega.MegaAccountDetails_ACCOUNT_TYPE_PROI
    ACCOUNT_TYPE_PROII = _mega.MegaAccountDetails_ACCOUNT_TYPE_PROII
    ACCOUNT_TYPE_PROIII = _mega.MegaAccountDetails_ACCOUNT_TYPE_PROIII
    ACCOUNT_TYPE_LITE = _mega.MegaAccountDetails_ACCOUNT_TYPE_LITE
    ACCOUNT_TYPE_BUSINESS = _mega.MegaAccountDetails_ACCOUNT_TYPE_BUSINESS
    SUBSCRIPTION_STATUS_NONE = _mega.MegaAccountDetails_SUBSCRIPTION_STATUS_NONE
    SUBSCRIPTION_STATUS_VALID = _mega.MegaAccountDetails_SUBSCRIPTION_STATUS_VALID
    SUBSCRIPTION_STATUS_INVALID = _mega.MegaAccountDetails_SUBSCRIPTION_STATUS_INVALID
    __swig_destroy__ = _mega.delete_MegaAccountDetails

    def getProLevel(self):
        return _mega.MegaAccountDetails_getProLevel(self)

    def getProExpiration(self):
        return _mega.MegaAccountDetails_getProExpiration(self)

    def getSubscriptionStatus(self):
        return _mega.MegaAccountDetails_getSubscriptionStatus(self)

    def getSubscriptionRenewTime(self):
        return _mega.MegaAccountDetails_getSubscriptionRenewTime(self)

    def getSubscriptionMethod(self):
        return _mega.MegaAccountDetails_getSubscriptionMethod(self)

    def getSubscriptionCycle(self):
        return _mega.MegaAccountDetails_getSubscriptionCycle(self)

    def getStorageMax(self):
        return _mega.MegaAccountDetails_getStorageMax(self)

    def getTransferMax(self):
        return _mega.MegaAccountDetails_getTransferMax(self)

    def getTransferOwnUsed(self):
        return _mega.MegaAccountDetails_getTransferOwnUsed(self)

    def getTransferSrvUsed(self):
        return _mega.MegaAccountDetails_getTransferSrvUsed(self)

    def getTransferUsed(self):
        return _mega.MegaAccountDetails_getTransferUsed(self)

    def getNumUsageItems(self):
        return _mega.MegaAccountDetails_getNumUsageItems(self)

    def getStorageUsed(self, *args):
        return _mega.MegaAccountDetails_getStorageUsed(self, *args)

    def getNumFiles(self, handle):
        return _mega.MegaAccountDetails_getNumFiles(self, handle)

    def getNumFolders(self, handle):
        return _mega.MegaAccountDetails_getNumFolders(self, handle)

    def getVersionStorageUsed(self, *args):
        return _mega.MegaAccountDetails_getVersionStorageUsed(self, *args)

    def getNumVersionFiles(self, handle):
        return _mega.MegaAccountDetails_getNumVersionFiles(self, handle)

    def copy(self):
        return _mega.MegaAccountDetails_copy(self)

    def getNumBalances(self):
        return _mega.MegaAccountDetails_getNumBalances(self)

    def getBalance(self, i):
        return _mega.MegaAccountDetails_getBalance(self, i)

    def getNumSessions(self):
        return _mega.MegaAccountDetails_getNumSessions(self)

    def getSession(self, i):
        return _mega.MegaAccountDetails_getSession(self, i)

    def getNumPurchases(self):
        return _mega.MegaAccountDetails_getNumPurchases(self)

    def getPurchase(self, i):
        return _mega.MegaAccountDetails_getPurchase(self, i)

    def getNumTransactions(self):
        return _mega.MegaAccountDetails_getNumTransactions(self)

    def getTransaction(self, i):
        return _mega.MegaAccountDetails_getTransaction(self, i)

    def getTemporalBandwidthInterval(self):
        return _mega.MegaAccountDetails_getTemporalBandwidthInterval(self)

    def getTemporalBandwidth(self):
        return _mega.MegaAccountDetails_getTemporalBandwidth(self)

    def isTemporalBandwidthValid(self):
        return _mega.MegaAccountDetails_isTemporalBandwidthValid(self)

    def __init__(self):
        _mega.MegaAccountDetails_swiginit(self, _mega.new_MegaAccountDetails())

# Register MegaAccountDetails in _mega:
_mega.MegaAccountDetails_swigregister(MegaAccountDetails)

class MegaPricing(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _mega.delete_MegaPricing

    def getNumProducts(self):
        return _mega.MegaPricing_getNumProducts(self)

    def getHandle(self, productIndex):
        return _mega.MegaPricing_getHandle(self, productIndex)

    def getProLevel(self, productIndex):
        return _mega.MegaPricing_getProLevel(self, productIndex)

    def getGBStorage(self, productIndex):
        return _mega.MegaPricing_getGBStorage(self, productIndex)

    def getGBTransfer(self, productIndex):
        return _mega.MegaPricing_getGBTransfer(self, productIndex)

    def getMonths(self, productIndex):
        return _mega.MegaPricing_getMonths(self, productIndex)

    def getAmount(self, productIndex):
        return _mega.MegaPricing_getAmount(self, productIndex)

    def getCurrency(self, productIndex):
        return _mega.MegaPricing_getCurrency(self, productIndex)

    def getDescription(self, productIndex):
        return _mega.MegaPricing_getDescription(self, productIndex)

    def getIosID(self, productIndex):
        return _mega.MegaPricing_getIosID(self, productIndex)

    def getAndroidID(self, productIndex):
        return _mega.MegaPricing_getAndroidID(self, productIndex)

    def isBusinessType(self, productIndex):
        return _mega.MegaPricing_isBusinessType(self, productIndex)

    def getAmountMonth(self, productIndex):
        return _mega.MegaPricing_getAmountMonth(self, productIndex)

    def copy(self):
        return _mega.MegaPricing_copy(self)

    def __init__(self):
        _mega.MegaPricing_swiginit(self, _mega.new_MegaPricing())

# Register MegaPricing in _mega:
_mega.MegaPricing_swigregister(MegaPricing)

class MegaAchievementsDetails(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MEGA_ACHIEVEMENT_WELCOME = _mega.MegaAchievementsDetails_MEGA_ACHIEVEMENT_WELCOME
    MEGA_ACHIEVEMENT_INVITE = _mega.MegaAchievementsDetails_MEGA_ACHIEVEMENT_INVITE
    MEGA_ACHIEVEMENT_DESKTOP_INSTALL = _mega.MegaAchievementsDetails_MEGA_ACHIEVEMENT_DESKTOP_INSTALL
    MEGA_ACHIEVEMENT_MOBILE_INSTALL = _mega.MegaAchievementsDetails_MEGA_ACHIEVEMENT_MOBILE_INSTALL
    MEGA_ACHIEVEMENT_ADD_PHONE = _mega.MegaAchievementsDetails_MEGA_ACHIEVEMENT_ADD_PHONE
    __swig_destroy__ = _mega.delete_MegaAchievementsDetails

    def getBaseStorage(self):
        return _mega.MegaAchievementsDetails_getBaseStorage(self)

    def getClassStorage(self, class_id):
        return _mega.MegaAchievementsDetails_getClassStorage(self, class_id)

    def getClassTransfer(self, class_id):
        return _mega.MegaAchievementsDetails_getClassTransfer(self, class_id)

    def getClassExpire(self, class_id):
        return _mega.MegaAchievementsDetails_getClassExpire(self, class_id)

    def getAwardsCount(self):
        return _mega.MegaAchievementsDetails_getAwardsCount(self)

    def getAwardClass(self, index):
        return _mega.MegaAchievementsDetails_getAwardClass(self, index)

    def getAwardId(self, index):
        return _mega.MegaAchievementsDetails_getAwardId(self, index)

    def getAwardTimestamp(self, index):
        return _mega.MegaAchievementsDetails_getAwardTimestamp(self, index)

    def getAwardExpirationTs(self, index):
        return _mega.MegaAchievementsDetails_getAwardExpirationTs(self, index)

    def getAwardEmails(self, index):
        return _mega.MegaAchievementsDetails_getAwardEmails(self, index)

    def getRewardsCount(self):
        return _mega.MegaAchievementsDetails_getRewardsCount(self)

    def getRewardAwardId(self, index):
        return _mega.MegaAchievementsDetails_getRewardAwardId(self, index)

    def getRewardStorage(self, index):
        return _mega.MegaAchievementsDetails_getRewardStorage(self, index)

    def getRewardTransfer(self, index):
        return _mega.MegaAchievementsDetails_getRewardTransfer(self, index)

    def getRewardStorageByAwardId(self, award_id):
        return _mega.MegaAchievementsDetails_getRewardStorageByAwardId(self, award_id)

    def getRewardTransferByAwardId(self, award_id):
        return _mega.MegaAchievementsDetails_getRewardTransferByAwardId(self, award_id)

    def getRewardExpire(self, index):
        return _mega.MegaAchievementsDetails_getRewardExpire(self, index)

    def copy(self):
        return _mega.MegaAchievementsDetails_copy(self)

    def currentStorage(self):
        return _mega.MegaAchievementsDetails_currentStorage(self)

    def currentTransfer(self):
        return _mega.MegaAchievementsDetails_currentTransfer(self)

    def currentStorageReferrals(self):
        return _mega.MegaAchievementsDetails_currentStorageReferrals(self)

    def currentTransferReferrals(self):
        return _mega.MegaAchievementsDetails_currentTransferReferrals(self)

    def __init__(self):
        _mega.MegaAchievementsDetails_swiginit(self, _mega.new_MegaAchievementsDetails())

# Register MegaAchievementsDetails in _mega:
_mega.MegaAchievementsDetails_swigregister(MegaAchievementsDetails)

class MegaCancelToken(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def createInstance():
        return _mega.MegaCancelToken_createInstance()
    __swig_destroy__ = _mega.delete_MegaCancelToken

    def cancel(self, newValue=True):
        return _mega.MegaCancelToken_cancel(self, newValue)

    def isCancelled(self):
        return _mega.MegaCancelToken_isCancelled(self)

# Register MegaCancelToken in _mega:
_mega.MegaCancelToken_swigregister(MegaCancelToken)

def MegaCancelToken_createInstance():
    return _mega.MegaCancelToken_createInstance()



